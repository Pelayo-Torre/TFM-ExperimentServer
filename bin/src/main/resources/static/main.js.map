{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/experiment/binnacle/binnacle.service.ts","./src/app/components/experiment/binnacle/components/binnacleExperiment.component.ts","./src/app/components/experiment/binnacle/components/binnacleExperiment.component.html","./src/app/components/experiment/binnacle/model/note.ts","./src/app/components/experiment/experiment-add/addExperiment.component.ts","./src/app/components/experiment/experiment-add/addExperiment.component.html","./src/app/components/experiment/experiment-detail/detailExperiment.component.ts","./src/app/components/experiment/experiment-detail/detailExperiment.component.html","./src/app/components/experiment/experiment-edit/editExperiment.component.ts","./src/app/components/experiment/experiment-edit/editExperiment.component.html","./src/app/components/experiment/experiment-list/listExperiments.component.ts","./src/app/components/experiment/experiment-list/listExperiments.component.html","./src/app/components/experiment/experiment.module.ts","./src/app/components/experiment/experiment.route.ts","./src/app/components/experiment/experiment.service.ts","./src/app/components/experiment/investigators-associated/investigatorsAssociated.component.ts","./src/app/components/experiment/investigators-associated/investigatorAssociated.component.html","./src/app/components/experiment/model/experiment.ts","./src/app/components/experiment/model/experimentAdd.ts","./src/app/components/investigator/investigator-add/addInvestigator.component.ts","./src/app/components/investigator/investigator-add/addInvestigator.component.html","./src/app/components/investigator/investigator.module.ts","./src/app/components/investigator/investigator.route.ts","./src/app/components/investigator/investigator.service.ts","./src/app/components/investigator/model/investigator.ts","./src/app/components/login/login-files/interceptor.service.ts","./src/app/components/login/login-files/login.component.ts","./src/app/components/login/login-files/login.component.html","./src/app/components/login/login-files/login.credentials.ts","./src/app/components/login/login-files/token.service.ts","./src/app/components/login/login.module.ts","./src/app/components/login/login.route.ts","./src/app/components/login/login.service.ts","./src/app/components/petition/model/petition.ts","./src/app/components/petition/petition-components/petitionReceived.component.ts","./src/app/components/petition/petition-components/petition.component.html","./src/app/components/petition/petition-components/petitionSent.component.ts","./src/app/components/petition/petition.module.ts","./src/app/components/petition/petition.route.ts","./src/app/components/petition/petition.service.ts","./src/app/components/shared/buttons/custom.primary.button.ts","./src/app/components/shared/buttons/custom.primary.button.html","./src/app/components/shared/inputs/custom.input.text.ts","./src/app/components/shared/inputs/custom.input.text.html","./src/app/components/shared/menu/custom.menu.component.ts","./src/app/components/shared/menu/custom.menu.component.html","./src/app/components/shared/model/identifier.ts","./src/app/guards/login-guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'TFM-ExperimentClient';\n\n  constructor(\n    private primengConfig: PrimeNGConfig,\n    ) {}\n\n  ngOnInit() {\n      this.primengConfig.ripple = true;\n  }\n\n}\n","<html lang=\"en\">\n<head>\n  <title>Angular uoMusic </title>\n  <meta charset=\"utf-8\"/>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n</head>\n<body>\n\n<custom-menu-component></custom-menu-component>\n\n<!-- Contenido -->\n<div >\n\n  <router-outlet></router-outlet>\n\n</div>\n\n</body>\n</html>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\n\n//Translation\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//Authentication\nimport { httpInterceptorProviders } from './components/login/login-files/interceptor.service';\n\n//Módulos\nimport { InvestigatorModule } from './components/investigator/investigator.module'\nimport { ExperimentModule } from './components/experiment/experiment.module'\nimport { CustomMenuComponent } from './components/shared/menu/custom.menu.component'\nimport { LoginModule } from './components/login/login.module'\nimport { PetitionModule } from './components/petition/petition.module'\n\n//Services\nimport { InvestigatorService } from './components/investigator/investigator.service'\nimport { ExperimentService } from './components/experiment/experiment.service'\nimport { LoginService } from './components/login/login.service'\nimport { BinnacleService } from './components/experiment/binnacle/binnacle.service'\nimport { PetitionService } from './components/petition/petition.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomMenuComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    InvestigatorModule,\n    ExperimentModule,\n    PetitionModule,\n    LoginModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage : 'es',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (http: HttpClient) => {\n          return new TranslateHttpLoader(http);\n        },\n        deps: [ HttpClient ]\n      }\n    }),\n  ],\n  providers: [\n\n    httpInterceptorProviders, \n    InvestigatorService,\n    ExperimentService, \n    LoginService, \n    BinnacleService,\n    PetitionService\n    \n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Identifier } from '../../shared/model/identifier'\r\nimport { Note } from './model/note'\r\n\r\n@Injectable()\r\nexport class BinnacleService {\r\n\r\n    urlBase = 'https://tfmexperiments.herokuapp.com/binnacle';               //--PRODUCCIÓN\r\n    //urlBase = 'http://localhost:8090/binnacle';                             //--LOCAL\r\n\r\n    token;\r\n\r\n    //Sirve para identificar si una nota ha sido creado o no\r\n    noteCreated: Boolean = false; \r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n    /**\r\n     * Envía una petición al servidor para registrar un nueva nota\r\n     * @param note , datos enviados\r\n     */\r\n    public register(note: Note){\r\n        var url = this.urlBase + \"/register/note\";\r\n        var body = note;\r\n        var headers = new HttpHeaders();\r\n        headers.append('token', this.token);\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.post(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para actualizar un nueva nota\r\n     * @param note , datos enviados\r\n     */\r\n    public update(note: Note){\r\n        var url = this.urlBase + \"/update/note\";\r\n        var body = note;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para eliminar un nota\r\n     * @param id , datos enviados\r\n     */\r\n    public delete(id: Identifier){\r\n        var url = this.urlBase + \"/delete/note\";\r\n        var body = id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener la lista de notas de un experimento\r\n     * @param idExperiment identificador del experimento\r\n     */\r\n    public getNotes(idExperiment: number){\r\n        var url = this.urlBase + \"/notes/experiment/\" + idExperiment;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Note[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Message } from 'primeng/api';\r\nimport { Note } from '../model/note'\r\nimport { BinnacleService } from '../binnacle.service'\r\nimport { Identifier } from '../../../shared/model/identifier';\r\nimport {MessageService} from 'primeng/api';\r\n\r\n\r\n@Component({\r\n    selector: 'binnacle-experiment',\r\n    templateUrl: './binnacleExperiment.component.html',\r\n    styleUrls: ['./binnacleExperiment.component.css' ,'../../../shared/common-style.css'],\r\n    providers: [MessageService]\r\n})\r\n\r\nexport class BinnacleComponent implements OnInit{\r\n\r\n    //Formulario de registro de una nota\r\n    public registerNote: FormGroup; \r\n\r\n    //Lista de notas de la bitácora del experimento\r\n    public notes: Note [] = [];\r\n\r\n    //Nueva nota que se va añadir a la bitácora\r\n    public note: Note;\r\n\r\n    //Identificador del experimento en cuestión\r\n    @Input(\"idExperiment\") idExperiment : number;\r\n\r\n    //Columnas de la tabla donde se almacenanrán las notas\r\n    cols: any[];\r\n\r\n    //Ventana modal de crear nota\r\n    displayModalNote: boolean;\r\n\r\n    //Ventana modal dialog para la confirmación de la eliminación de una nota de la bitácora\r\n    displayDeleteConfirmation: boolean;\r\n\r\n    //Variable booleana que representa si el investigador se encuentra editando una nota\r\n    updating: boolean;\r\n\r\n    //Nota que va a ser eliminada o editada\r\n    private noteAction: Note;\r\n\r\n    //Título de la ventana modal\r\n    titleModalEditRegister: string;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private fb: FormBuilder,\r\n        private binnacleService: BinnacleService,\r\n        private messageService: MessageService\r\n    ){\r\n        \r\n        this.registerNote = this.fb.group({\r\n            title: ['', [Validators.required]],\r\n            description: ['', [Validators.required]]\r\n        });\r\n\r\n        this.cols = [\r\n            { field: 'note', header: 'note', width: '100%' }\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        //Se cargan las notas del experimento\r\n        this.getNotes();\r\n    }\r\n\r\n    /**\r\n     * Realiza una llamada al servicio para onbtener la lista de notas de la bitácora\r\n     */\r\n    private getNotes(){\r\n        this.binnacleService.getNotes(this.idExperiment)\r\n            .then(notes => this.notes = notes);\r\n    }\r\n\r\n    /**\r\n     * Rellena un objeto con los datos del formulario de la nota para enviarlos al servidor\r\n     */\r\n    private fillNote(note: Note){\r\n        note.title = this.registerNote.value.title;\r\n        note.description = this.registerNote.value.description;\r\n        note.idExperiment = this.idExperiment;\r\n    }\r\n\r\n    /**\r\n     * Invoca al registro o a la edición dependiendo de la variable de control\r\n     */\r\n    public actionNote(){ \r\n        if(this.updating){\r\n            this.update();\r\n        }\r\n        else{\r\n            this.register();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Realiza el registro de una nota. Para ello, envía una petición al servidor y trata la respuesta obtenida\r\n     */\r\n    private register(){\r\n        this.note = new Note();\r\n        this.fillNote(this.note);\r\n        var resObs = this.binnacleService.register(this.note);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se obtiene la lista de notas\r\n                this.getNotes();\r\n                //Se cierra la ventana modal\r\n                this.displayModalNote = false;\r\n                this.translate.get('experiment.binnacle.registerNote.registerSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.binnacle.registerNote.registerErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                //Se cierra la ventana modal\r\n                this.displayModalNote = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Actualiza los datos de una nota de la bitácora\r\n     */\r\n    private update(){\r\n        this.fillNote(this.noteAction);\r\n        var resObs = this.binnacleService.update(this.noteAction);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Obtenemos la lista de notas\r\n                this.getNotes();\r\n                //Se cierra la ventana modal\r\n                this.displayModalNote = false;\r\n                //Se cancela la edición\r\n                this.updating = false;\r\n                this.translate.get('experiment.binnacle.updateNote.updateSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.binnacle.updateNote.updateSuccess').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                //Se cierra la ventana modal\r\n                this.displayModalNote = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Elimina una nota de la bitácora\r\n     */\r\n    public delete(){\r\n        let identifier = new Identifier(this.noteAction.id);\r\n        var resObs = this.binnacleService.delete(identifier);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se obtiene la lista de notas\r\n                this.getNotes();\r\n                //Se cierra la ventana modal\r\n                this.displayDeleteConfirmation = false;\r\n                this.translate.get('experiment.binnacle.deleteNote.deleteSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.binnacle.deleteNote.deleteErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                //Se cierra la ventana modal\r\n                this.displayDeleteConfirmation = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana modal de confirmación de eliminación de una nota en la bitácora. \r\n     * Además, recibe la nota que va a eliminar y la guarda en contexto.\r\n     * @param note \r\n     */\r\n    public showModalDeleteNote(note: Note){\r\n        this.noteAction = note;\r\n        this.displayDeleteConfirmation = true;\r\n    }\r\n\r\n     /**\r\n     * Muestra la ventana modal edición de una nota en la bitácora. \r\n     * Rellena los datos del formulario con los de la nota que se va a editar\r\n     * Además, recibe la nota que va a editar y la guarda en contexto.\r\n     */\r\n    public showModalEditNote(note: Note){\r\n        this.noteAction = note;\r\n        this.translate.get('experiment.binnacle.updateNote.title').subscribe((data:any)=> {\r\n            this.titleModalEditRegister =  data;\r\n        });\r\n        this.updating = true;\r\n        this.registerNote = this.fb.group({\r\n            title: [note.title, [Validators.required]],\r\n            description: [note.description, [Validators.required]]\r\n        });\r\n        this.displayModalNote = true;\r\n    }\r\n\r\n    /**\r\n     * Despliega una ventana modal para el registro de una nota en la bitácora del experimento\r\n     */\r\n    public showModalNote() {\r\n        this.displayModalNote = true;\r\n        this.translate.get('experiment.binnacle.registerNote.title').subscribe((data:any)=> {\r\n            this.titleModalEditRegister =  data;\r\n        });\r\n        this.registerNote = this.fb.group({\r\n            title: ['', [Validators.required]],\r\n            description: ['', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    public show(sever: string, summ: string, info: string) {\r\n        this.messageService.add({severity: sever, summary: summ, detail: info});\r\n    }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-toast position=\"top-right\" key=\"tl\"></p-toast>\r\n<div id=\"header\">\r\n    <div id=\"title\">\r\n        <h3>{{ 'experiment.binnacle.title' | translate  }}</h3>\r\n    </div>\r\n    <div id=\"buttonNoteAdd\">\r\n        <p-button label=\"{{ 'experiment.binnacle.newNote' | translate  }}\" (click)=\"showModalNote()\" icon=\"pi pi-plus\"></p-button>\r\n    </div>\r\n</div>\r\n<div id=\"contentTable\">\r\n    <p-table #dt [columns]=\"cols\" [value]=\"notes\" [paginator]=\"true\" [rows]=\"10\" id=\"table\" \r\n     [responsive]=\"true\">\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <div class=\"p-shadow-4\">\r\n                        <p-panel>\r\n                            <p-header class=\"headerPanel\">\r\n                                <div class=\"title\">\r\n                                    <span class=\"ui-panel-title\"><strong> {{rowData['title']}}</strong></span>\r\n                                </div>\r\n                                <div class=\"actions\">\r\n                                    <button pButton type=\"button\" label=\"{{ 'experiment.binnacle.update' | translate  }}\" class=\"p-button-text p-button-plain\" icon=\"pi pi-pencil\" (click)=\"showModalEditNote(rowData)\"></button>\r\n                                    <button pButton type=\"button\" label=\"{{ 'experiment.binnacle.delete' | translate  }}\" class=\"p-button-text p-button-plain\" icon=\"pi pi-trash\" (click)=\"showModalDeleteNote(rowData)\" > </button>\r\n                                </div>\r\n                            </p-header>\r\n                            <div>\r\n                                {{rowData['description']}}\r\n                            </div>\r\n                        </p-panel>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"6\"><strong>{{ 'experiment.binnacle.empty' | translate  }}</strong></td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<!-- VENTANA MODAL DE AÑADIR Y EDITAR NOTA -->\r\n<p-dialog header=\"{{titleModalEditRegister}}\" [(visible)]=\"displayModalNote\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"\r\n    [draggable]=\"false\" [resizable]=\"false\">\r\n    <form [formGroup]=\"registerNote\" (ngSubmit)=\"actionNote()\">\r\n        <div id=\"divPrin\">\r\n            <div class=\"p-fluid\" id=\"boxInputs\">\r\n                <div class=\"p-field\">\r\n                    <label for=\"title\"><strong>{{ 'experiment.binnacle.registerNote.titleNote' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <input id=\"title\" type=\"text\" maxlength=30 formControlName=\"title\" pInputText>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerNote.get('title').touched && registerNote.get('title').hasError('required')\">{{ 'experiment.binnacle.registerNote.validations.title' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"description\"><strong>{{ 'experiment.binnacle.registerNote.descriptionNote' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <textarea id=\"description\" rows=\"5\" cols=\"30\" pInputTextarea formControlName=\"description\" autoResize=\"autoResize\" maxlength=350></textarea>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerNote.get('description').touched && registerNote.get('description').hasError('required')\">{{ 'experiment.binnacle.registerNote.validations.description' | translate }}</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"boxButton\">\r\n                <p-button *ngIf=\"!updating\" label=\"{{ 'experiment.binnacle.registerNote.register' | translate }}\" id=\"formButton\" type=\"submit\"  [disabled]=registerNote.invalid></p-button>\r\n                <p-button *ngIf=\"updating\" label=\"{{ 'experiment.binnacle.updateNote.update' | translate }}\" id=\"formButton\" type=\"submit\"  [disabled]=registerNote.invalid></p-button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</p-dialog>\r\n\r\n<!-- VENTANA MODAL DE ELIMINAR UNA NOTA -->\r\n<p-dialog header=\"{{ 'experiment.binnacle.deleteNote.title' | translate }}\" [(visible)]=\"displayDeleteConfirmation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\">\r\n    <p>{{ 'experiment.binnacle.deleteNote.description' | translate }}</p>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple icon=\"pi pi-check\" (click)=\"delete()\" label=\"{{ 'experiment.binnacle.deleteNote.yes' | translate }}\" class=\"p-button-danger\"></button>\r\n        <button pButton pRipple icon=\"pi pi-times\" (click)=\"displayDeleteConfirmation=false\" label=\"{{ 'experiment.binnacle.deleteNote.no' | translate }}\" class=\"p-button-secondary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n","export class Note {\r\n\r\n    id: number;\r\n    idExperiment: number;\r\n    title: string;\r\n\tdescription: string;\r\n\tcreationDate: Date;\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ExperimentAdd } from '../model/experimentAdd';\r\nimport { ExperimentService } from '../experiment.service';\r\nimport { Device } from '../model/device'\r\nimport { Message } from 'primeng/api';\r\nimport { SessionStorageService } from 'angular-web-storage';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'AddExperimentComponent',\r\n    templateUrl: './addExperiment.component.html',\r\n    styleUrls: ['./addExperiment.component.css' ,'../../shared/common-style.css']\r\n})\r\nexport class AddExperimentComponent implements OnInit{\r\n\r\n    public registerExperiment: FormGroup; \r\n\r\n    public experiment: ExperimentAdd;\r\n\r\n    //Género del experimento\r\n    gender: string;\r\n\r\n    //Fecha de nacimiento\r\n    birthdate: Date;\r\n\r\n    //Laterality\r\n    laterality: string;\r\n\r\n    //Lista de dispositivos\r\n    devices: Device [] = [];\r\n\r\n    //Device seleccionado\r\n    device: number;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private fb: FormBuilder,\r\n        private router: Router,\r\n        private experimentService: ExperimentService,\r\n        private session: SessionStorageService\r\n    ){\r\n        this.experiment = new ExperimentAdd();\r\n\r\n        this.registerExperiment = this.fb.group({\r\n            title: ['', [Validators.required]],\r\n            description: ['', [Validators.required]],\r\n            gender: ['', [Validators.required]],\r\n            birthdate : ['', [Validators.required]],\r\n            laterality : ['', [Validators.required]],\r\n            device : ['', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        //Cargamos los dispositivos existentes\r\n        this.experimentService.getAllDevices()\r\n            .then(devices => this.devices = devices);\r\n    }\r\n\r\n    /**\r\n     * Crea un objeto con los datos del formulario del experimento para enviarlos al servidor\r\n     */\r\n    private createExperiment(){\r\n        this.experiment.title = this.registerExperiment.value.title;\r\n        this.experiment.description = this.registerExperiment.value.description;\r\n        this.experiment.gender = this.registerExperiment.value.gender;\r\n        this.experiment.birthDate = this.registerExperiment.value.birthdate;\r\n        this.experiment.laterality = this.registerExperiment.value.laterality;\r\n        this.experiment.idDevice = this.registerExperiment.value.device;\r\n        this.experiment.idInvestigator = this.session.get(\"investigator\")['id'];\r\n    }\r\n\r\n    /**\r\n     * Realiza el registro de un experimento. Para ello, envía una petición al servidor y trata la respuesta obtenida\r\n     */\r\n    register(){ \r\n        this.createExperiment();\r\n        var resObs = this.experimentService.register(this.experiment);\r\n        resObs.subscribe(\r\n            res => {\r\n                //El registro fue correcto -- Se redirige a la lista de experimentos del usuario\r\n                this.experimentService.experimentCreated = true;\r\n                this.router.navigate(['experiments/']);\r\n            },\r\n            err => {\r\n                this.translate.get('investigator.register.registerErr').subscribe((data:any)=> {\r\n                    this.show(data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    show(info: string) {\r\n        this.msgs = [{severity:'error', summary:'Message', detail: info}];\r\n    }\r\n\r\n    /**\r\n     * Limpia los mensajes del array\r\n     */\r\n    hide() {\r\n        this.msgs = [];\r\n    }\r\n\r\n}\r\n","\r\n<p-messages [(value)]=\"msgs\" [enableService]=\"false\" id=\"message\"></p-messages>\r\n\r\n<form [formGroup]=\"registerExperiment\" (ngSubmit)=\"register()\">\r\n    <div id=\"divPrin\">\r\n        <div class=\"p-shadow-7\" id=\"boxForm\" >\r\n            <div class=\"p-fluid\" id=\"boxInputs\">\r\n                <div id=\"title\" > \r\n                    <h3>{{ 'experiment.register.title' | translate }}</h3>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"title\"><strong>{{ 'experiment.register.titleExperiment' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <input id=\"title\" type=\"text\" maxlength=120 formControlName=\"title\" pInputText>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerExperiment.get('title').touched && registerExperiment.get('title').hasError('required')\">{{ 'experiment.register.validations.title' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"description\"><strong>{{ 'experiment.register.description' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <textarea id=\"description\" rows=\"4\" cols=\"30\" pInputTextarea formControlName=\"description\" autoResize=\"autoResize\" maxlength=250></textarea>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerExperiment.get('description').touched && registerExperiment.get('description').hasError('required')\">{{ 'experiment.register.validations.description' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <div class=\"p-field\">\r\n                        <label for=\"description\"><strong>{{ 'experiment.register.birthdate' | translate }}</strong></label>\r\n                        <p-calendar formControlName=\"birthdate\" [(ngModel)]=\"birthdate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"1900:2030\"></p-calendar>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerExperiment.get('birthdate').touched && registerExperiment.get('birthdate').hasError('required')\">{{ 'experiment.register.validations.birthdate' | translate }}</span>\r\n                </div>\r\n                <div id=\"genderAndLateralityDiv\">\r\n                    <div id=\"genderDiv\">\r\n                        <label for=\"gender\"><strong>{{ 'experiment.register.gender' | translate }}</strong></label>\r\n                        <div class=\"p-field-radiobutton\">\r\n                            <p-radioButton name=\"genero\" value=\"MALE\" formControlName=\"gender\" [(ngModel)]=\"gender\" inputId=\"masculino\"></p-radioButton>\r\n                            <label for=\"masculino\" class=\"labelrbutton\">{{ 'experiment.register.male' | translate }}</label>\r\n    \r\n                            <p-radioButton name=\"genero\" value=\"FEMALE\" formControlName=\"gender\" [(ngModel)]=\"gender\" inputId=\"femenino\"></p-radioButton>\r\n                            <label for=\"femenino\" class=\"labelrbutton\">{{ 'experiment.register.female' | translate }}</label>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"lateralityDiv\">\r\n                        <label for=\"laterality\"><strong>{{ 'experiment.register.laterality' | translate }}</strong></label>\r\n                        <div class=\"p-field-radiobutton\">\r\n                            <p-radioButton name=\"laterality\" value=\"LEFT_HANDED\" formControlName=\"laterality\" [(ngModel)]=\"laterality\" inputId=\"izquierda\"></p-radioButton>\r\n                            <label for=\"izquierda\" class=\"labelrbutton\">{{ 'experiment.register.left' | translate }}</label>\r\n    \r\n                            <p-radioButton name=\"laterality\" value=\"RIGHT_HANDED\" formControlName=\"laterality\" [(ngModel)]=\"laterality\" inputId=\"derecha\"></p-radioButton>\r\n                            <label for=\"derecha\" class=\"labelrbutton\">{{ 'experiment.register.right' | translate }}</label>\r\n                        </div>                    \r\n                    </div>\r\n                </div>\r\n                <div id=\"devicesDiv\">\r\n                    <label for=\"device\"><strong>{{ 'experiment.register.device' | translate }}</strong></label>\r\n                    <div class=\"p-field-radiobutton\" *ngFor=\"let dev of devices\">\r\n                        <p-radioButton  name=\"{{dev.name}}\" value=\"{{dev.id}}\" formControlName=\"device\" [(ngModel)]=\"device\"></p-radioButton>\r\n                        <label for=\"{{dev.name}}\" class=\"labelrbutton\">{{ 'experiment.register.device' + dev.id | translate }}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"boxButton\">\r\n                <p-button label=\"{{ 'experiment.register.register' | translate }}\" id=\"formButton\" type=\"submit\"  [disabled]=registerExperiment.invalid></p-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'DetailExperimentComponent',\r\n    templateUrl: './detailExperiment.component.html',\r\n    styleUrls: ['./detailExperiment.component.css' ,'../../shared/common-style.css']\r\n})\r\nexport class DetailExperimentComponent implements OnInit{\r\n    \r\n    //Identificador del experimento del detalle\r\n    public idExperiment: number;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n    ){}\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params: Params) => {\r\n\t\t\tlet id = params['id'];\r\n\t\t\tthis.idExperiment = id;\r\n\t\t});\r\n    }\r\n\r\n}\r\n","<div id=\"divPrin\">\r\n\r\n    <div id=\"div1\">\r\n        <!-- DIV DE LOS DATOS GENERALES E INVESTIGADORES -->\r\n\r\n        <div id=\"divDatosGenerales\">\r\n            <!-- DIV DATOS GENERALES -->\r\n            <edit-experiment [idExperiment]=\"idExperiment\" ></edit-experiment>\r\n        </div>\r\n\r\n        <div id=\"divInvestigadores\" >\r\n            <!-- DIV INVESTIGADORES ASOCIADOS -->\r\n            <investigators-associated [idExperiment]=\"idExperiment\"></investigators-associated> \r\n        </div>\r\n\r\n    </div>\r\n    <div id=\"div2\">\r\n        <!-- DIV DE LA BITÁCORA -->\r\n        <binnacle-experiment [idExperiment]=\"idExperiment\"></binnacle-experiment>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Experiment } from '../model/experiment';\r\nimport { ExperimentService } from '../experiment.service';\r\nimport { Message } from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { Identifier } from '../../shared/model/identifier';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'edit-experiment',\r\n    templateUrl: './editExperiment.component.html',\r\n    styleUrls: ['./editExperiment.component.css' ,'../../shared/common-style.css'],\r\n    providers: [MessageService]\r\n})\r\nexport class EditExperimentComponent implements OnInit{\r\n\r\n    //Experimento en cuestión\r\n    @Input(\"idExperiment\") idExperiment : number;\r\n\r\n    //Formulario de edición de un experimento\r\n    updateExperiment: FormGroup; \r\n\r\n    //Variable booleana que indica si el usuario está editando o no el experimento\r\n    updating: boolean;\r\n\r\n    //Representa el experimento actual\r\n    experiment: Experiment;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n \r\n    selectedAction: string;\r\n    //actions: string [] = [];\r\n\r\n    actions = []; \r\n\r\n    constructor(\r\n        private experimentService: ExperimentService,\r\n        private translate: TranslateService,\r\n        private fb: FormBuilder,\r\n        private messageService: MessageService,\r\n        private router : Router\r\n    ){\r\n        this.updateExperiment = this.fb.group({\r\n            title: ['', [Validators.required]],\r\n            description: ['', [Validators.required]]\r\n        });\r\n        this.experiment = new Experiment();\r\n        this.updating = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        //Se cargan las notas del experimento\r\n        this.loadExperimentData();\r\n    }\r\n\r\n    ngDoCheck(){\r\n        if(this.selectedAction != null || this.selectedAction != undefined){\r\n            console.log(this.selectedAction)\r\n            //Se realiza la acción pertinente\r\n            if(this.selectedAction['name'] === 'OPEN'){\r\n                this.open();\r\n            }\r\n            else if(this.selectedAction['name'] === 'CLOSE'){\r\n                this.close();\r\n            }\r\n            else if(this.selectedAction['name'] === 'DELETE'){\r\n                this.delete();\r\n            }\r\n            else if(this.selectedAction['name'] === 'REOPEN'){\r\n                this.reopen();\r\n            }\r\n            this.selectedAction = undefined;\r\n        }\r\n        \r\n    }\r\n\r\n    /** \r\n     * Carga los datos del experimento\r\n     */\r\n    private loadExperimentData(){\r\n        var resObs = this.experimentService.detail(this.idExperiment);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cargan los datos en el formulario\r\n                this.updateExperiment = this.fb.group({\r\n                    title: [res['title'], [Validators.required]],\r\n                    description: [res['description'], [Validators.required]]\r\n                });\r\n                //Rellenamos el experimento con los datos que nos vienen en la response\r\n                this.createExperiment(res);\r\n                this.loadActions();\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.edit.loadDataErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    private createExperiment(experiment: any){\r\n        this.experiment.title = experiment['title'];\r\n        this.experiment.description = experiment['description'];\r\n        this.experiment.creationDate = experiment['creationDate'];\r\n        this.experiment.id = experiment['id'];\r\n        this.experiment.status = experiment['status'];\r\n        this.experiment.mailInvestigator = experiment['mailInvestigator'];\r\n        this.experiment.nameInvestigator = experiment['nameInvestigator'];\r\n        this.experiment.surnameInvestigator = experiment['surnameInvestigator'];\r\n        this.experiment.usernameInvestigator = experiment['usernameInvestigator'];\r\n        this.experiment.gender = experiment['gender'];\r\n        this.experiment.idDevice = experiment['idDevice'];\r\n        this.experiment.laterality = experiment['laterality'];\r\n        this.experiment.birthDate = experiment['birthDate'];\r\n    }\r\n\r\n    /**\r\n     * Carga las acciones a realizar en función del estado del experimento\r\n     */\r\n    private loadActions(){\r\n        if(this.experiment.status === 'CREATED'){\r\n            this.actions = [ \r\n                {name: 'OPEN', code: 'OPEN'}, \r\n                {name: 'DELETE', code: 'DELETED'}\r\n            ];\r\n        }\r\n        else if(this.experiment.status === 'OPEN'){\r\n            this.actions = [ \r\n                {name: 'CLOSE', code: 'CLOSED'}\r\n            ]; \r\n        }\r\n        else if(this.experiment.status === 'CLOSED'){\r\n            this.actions = [ \r\n                {name: 'REOPEN', code: 'OPEN'}, \r\n                {name: 'DELETE', code: 'DELETED'}\r\n            ];\r\n        }\r\n    }\r\n\r\n    //Realiza la actualización de los datos del experimento\r\n    public update(){\r\n        //Cogemos los datos del formulario\r\n        this.experiment.title = this.updateExperiment.value.title;\r\n        this.experiment.description = this.updateExperiment.value.description;\r\n        var resObs = this.experimentService.update(this.experiment);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Desactivamos el modo edición\r\n                this.desactivateEdition();\r\n                //Lanzamos toast de que la edición fue correcta\r\n                this.translate.get('experiment.edit.updateSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.edit.updateErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Realiza la apertura del experimento.\r\n     */\r\n    public open(){\r\n        let id = new Identifier(this.experiment.id)\r\n        var resObs = this.experimentService.open(id)\r\n        resObs.subscribe(\r\n            res => {\r\n                //Cambiamos el estado del experimento\r\n                this.experiment.status = 'OPEN'\r\n                //Recargamos las acciones en función del nuevo estado\r\n                this.loadActions();\r\n                //Lanzamos toast de que la edición fue correcta\r\n                this.translate.get('experiment.open').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.openErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Realiza la eliminación del experimento\r\n     */\r\n    public delete(){\r\n        let id = new Identifier(this.experiment.id)\r\n        var resObs = this.experimentService.delete(id)\r\n        resObs.subscribe(\r\n            res => {\r\n                //Redirigimos al usuario a la pantalla principal\r\n                this.experimentService.deleted = true;\r\n                this.router.navigate(['/experiments']);\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.deleteErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Realiza el cerrado del experimento.\r\n     */\r\n    public close(){\r\n        let id = new Identifier(this.experiment.id)\r\n        var resObs = this.experimentService.close(id)\r\n        resObs.subscribe(\r\n            res => {\r\n                //Cambiamos el estado del experimento\r\n                this.experiment.status = 'CLOSED'\r\n                //Recargamos las acciones en función del nuevo estado\r\n                this.loadActions();\r\n                //Lanzamos toast de que la edición fue correcta\r\n                this.translate.get('experiment.close').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.closeErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n      /**\r\n     * Realiza la apertura del experimento.\r\n     */\r\n    public reopen(){\r\n        let id = new Identifier(this.experiment.id)\r\n        var resObs = this.experimentService.reOpen(id)\r\n        resObs.subscribe(\r\n            res => {\r\n                //Cambiamos el estado del experimento\r\n                this.experiment.status = 'OPEN'\r\n                //Recargamos las acciones en función del nuevo estado\r\n                this.loadActions();\r\n                //Lanzamos toast de que la edición fue correcta\r\n                this.translate.get('experiment.reopen').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.reopenErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Activa la edición de los datos del experimento\r\n     */\r\n    public activateEdition(){\r\n        this.updating = true;\r\n    }\r\n\r\n    /**\r\n     * Desactiva la edición de los datos del experimeto\r\n     */\r\n    public desactivateEdition(){\r\n        this.updating = false;\r\n        this.updateExperiment = this.fb.group({\r\n            title: [this.experiment.title, [Validators.required]],\r\n            description: [this.experiment.description, [Validators.required]]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    public show(sever: string, summ: string, info: string) {\r\n        this.messageService.add({severity: sever, summary: summ, detail: info});\r\n    }\r\n\r\n}","<p-toast></p-toast>\r\n<p-toast position=\"top-right\" key=\"tl\"></p-toast>\r\n\r\n<div id=\"toolbar\">\r\n    <div class=\"p-toolbar-group-left\" id=\"titleToolbar\">\r\n        <h3>{{ 'experiment.detail' | translate }}</h3>\r\n    </div>\r\n    <div class=\"p-toolbar-group-right\" id=\"buttonsToolbar\">\r\n        <p-dropdown [options]=\"actions\" [(ngModel)]=\"selectedAction\" optionLabel=\"name\" [showClear]=\"true\" placeholder=\"{{ 'experiment.actions' | translate }}\">\r\n            <ng-template let-action pTemplate=\"item\">\r\n                <div class=\"action-item\">\r\n                    <div><span >{{ 'experiment.' + action.value.name | translate }}</span></div>\r\n                </div>\r\n            </ng-template>\r\n        </p-dropdown>\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"updateExperiment\" (ngSubmit)=\"update()\">\r\n    <div id=\"divPrin\" class=\"p-shadow-2\">\r\n        <div  id=\"boxForm\" >\r\n            <div class=\"p-fluid\" id=\"boxInputs\">\r\n                <div class=\"p-field\">\r\n                    <label for=\"title\" id=\"labelTitle\"><strong>{{ 'experiment.edit.title' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <input *ngIf=\"updating\" id=\"title\" type=\"text\" maxlength=120 formControlName=\"title\" pInputText>\r\n                        <input *ngIf=\"!updating\" readonly disabled id=\"title\" type=\"text\" maxlength=120 formControlName=\"title\" pInputText>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"updateExperiment.get('title').touched && updateExperiment.get('title').hasError('required')\">{{ 'experiment.edit.validations.title' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"description\"><strong>{{ 'experiment.edit.description' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <textarea *ngIf=\"updating\" id=\"description\" rows=\"5\" cols=\"30\" pInputTextarea formControlName=\"description\" autoResize=\"autoResize\" maxlength=250></textarea>\r\n                        <textarea *ngIf=\"!updating\" readonly disabled id=\"description\" rows=\"5\" cols=\"30\" pInputTextarea formControlName=\"description\" autoResize=\"autoResize\" maxlength=350></textarea>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"updateExperiment.get('description').touched && updateExperiment.get('description').hasError('required')\">{{ 'experiment.edit.validations.description' | translate }}</span>\r\n                </div>\r\n                <div>\r\n                    <label for=\"status\"><strong>{{ 'experiment.edit.status' | translate }} </strong>\r\n                        <span class=\"{{experiment.status}}\"> {{ 'experiment.list.states.' + experiment.status | translate  }} </span>\r\n                    </label><br>\r\n                    <label for=\"nameInvestigator\"><strong>Creador  </strong>\r\n                        <span>{{ experiment.nameInvestigator }} {{experiment.surnameInvestigator}} ( {{ experiment.mailInvestigator }} )</span>\r\n                    </label><br>\r\n                    <label for=\"creationDateInvestigator\"><strong>{{ 'experiment.edit.creationDate' | translate }}  </strong>\r\n                        <span>{{ experiment.creationDate | date: 'dd/MM/yyyy' }}</span>\r\n                    </label><br>  \r\n                    <label for=\"creationDateInvestigator\"><strong>{{ 'experiment.edit.gender' | translate }}  </strong>\r\n                        <span *ngIf=\"experiment.gender === 'MALE'\">{{ 'experiment.edit.male' | translate }}</span>\r\n                        <span *ngIf=\"experiment.gender === 'FEMALE'\">{{ 'experiment.edit.female' | translate }}</span>\r\n                    </label><br>   \r\n                    <label for=\"creationDateInvestigator\"><strong>{{ 'experiment.edit.laterality' | translate }}  </strong>\r\n                        <span *ngIf=\"experiment.laterality === 'LEFT_HANDED'\">{{ 'experiment.edit.left' | translate }}</span>\r\n                        <span *ngIf=\"experiment.laterality === 'RIGHT_HANDED'\">{{ 'experiment.edit.right' | translate }}</span>\r\n                    </label><br> \r\n                    <label for=\"creationDateInvestigator\"><strong>{{ 'experiment.edit.device' | translate }}  </strong>\r\n                        <span>{{ 'experiment.edit.device' + experiment.idDevice | translate }}</span>\r\n                    </label><br> \r\n                    <label for=\"creationDateInvestigator\"><strong>{{ 'experiment.edit.birthdate' | translate }}  </strong>\r\n                        <span>{{ experiment.birthDate | date: 'dd/MM/yyyy'}}</span>\r\n                    </label><br>            \r\n                </div>\r\n            </div>\r\n            <div id=\"boxButton\"  >\r\n                <p-button *ngIf=\"updating\" label=\"{{ 'experiment.edit.accept' | translate }}\" id=\"acceptEdition\" type=\"submit\"  [disabled]=updateExperiment.invalid></p-button>\r\n                <button pButton pRipple *ngIf=\"updating\" label=\"{{ 'experiment.edit.cancel' | translate }}\" id=\"cancelEdition\" (click)=\"desactivateEdition()\" class=\"p-button-secondary\" ></button>\r\n                <p-button *ngIf=\"!updating\" label=\"{{ 'experiment.edit.update' | translate }}\" id=\"edition\" (click)=\"activateEdition()\" ></p-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, OnInit } from '@angular/core';\r\nimport { InvestigatorService } from '../../investigator/investigator.service'\r\nimport { ExperimentService } from '../experiment.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Experiment } from '../model/experiment';\r\nimport { Message } from 'primeng/api';\r\nimport { SessionStorageService } from 'angular-web-storage';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './listExperiments.component.html',\r\n  styleUrls: ['./listExperiment.component.css' , '../../shared/common-style.css'],\r\n  providers: []\r\n\r\n})\r\nexport class ListExperimentComponent implements OnInit{ \r\n\r\n    experiments: Experiment[];\r\n\r\n    cols: any[];\r\n\r\n    statuses: any[];\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private investigatorService: InvestigatorService,\r\n        private experimentService: ExperimentService,\r\n        private translate: TranslateService,\r\n        private session: SessionStorageService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.investigatorService.getExperimentsAcceptedByInvestigator(this.session.get(\"investigator\")['id'])\r\n            .then(experiments => this.experiments = this.parserDate(experiments));\r\n            \r\n\r\n        this.cols = [\r\n            { field: 'title', header: 'titleExperiment', width: '20%' },\r\n            { field: 'description', header: 'description', width: '40%' },\r\n            { field: 'formatDate', header: 'creationDate', width: '15%'},\r\n            { field: 'status', header: 'state', width: '15%' },\r\n            { field: 'acciones', header: 'actions', width: '10%' }\r\n        ];\r\n\r\n        this.statuses = [\r\n            {label: 'created', value: 'CREATED'},\r\n            {label: 'open', value: 'OPEN'},\r\n            {label: 'closed', value: 'CLOSED'}\r\n        ]\r\n    }\r\n\r\n    ngDoCheck(){\r\n        if (this.experimentService.experimentCreated) {\r\n            this.experimentService.experimentCreated = false;\r\n            this.translate.get('experiment.register.registerSuccess').subscribe((data:any)=> {\r\n                this.show(data, 'success');\r\n            });\r\n            setTimeout(() => this.hide(), 5000);\r\n        }\r\n        \r\n        if(this.experimentService.deleted){\r\n            this.experimentService.deleted = false;\r\n            this.translate.get('experiment.delete').subscribe((data:any)=> {\r\n                this.show(data, 'success');\r\n            });\r\n            setTimeout(() => this.hide(), 5000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parsea las fechas de creación de los experientos \r\n     * @param experiments lista de experimentos\r\n     */\r\n    parserDate(experiments: Experiment[]) : Experiment[]{\r\n        experiments.forEach(experiment => {\r\n            let date = new Date(experiment.creationDate);\r\n            experiment.formatDate = this.parserNumber(date.getDate()) + \r\n            \"/\" + this.parserNumber((date.getMonth()+1)) + \"/\" + this.parserNumber(date.getFullYear())\r\n        });\r\n        return experiments;\r\n    }\r\n\r\n    /**\r\n     * Parsea un número si solo tiene un dígito\r\n     * @param num \r\n     */\r\n    parserNumber(num: number){\r\n        if(num.toString().length == 1){\r\n            return \"0\" + num;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    show(info: string, sever: string) {\r\n        this.msgs = [{severity: sever, summary:'Message', detail: info}];\r\n    }\r\n\r\n    /**\r\n     * Limpia los mensajes del array\r\n     */\r\n    hide() {\r\n        this.msgs = [];\r\n    }\r\n\r\n}\r\n","\r\n<div id=\"alerts\">\r\n    <p-messages  [(value)]=\"msgs\" [enableService]=\"false\"></p-messages>\r\n</div>\r\n<div id=\"divPrin\">\r\n    <div id=\"header\">\r\n        <div id=\"title\">\r\n            <h2>{{ 'experiment.list.title' | translate }}</h2>\r\n        </div>\r\n        <div id=\"search\">\r\n            <p-button label=\"{{ 'experiment.list.newExperiment' | translate }}\" icon=\"pi pi-plus\" routerLink=\"/experiments/register/\"></p-button>\r\n        </div>\r\n    </div>\r\n    <div id=\"contentTable\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"experiments\" [paginator]=\"true\" [rows]=\"10\" id=\"table\" \r\n         [responsive]=\"true\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\" >\r\n                        <span class=\"headerTitlesTable\">{{ 'experiment.list.header.' + col.header | translate }}</span>\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\">\r\n                        <input class=\"inputFilter\" *ngSwitchCase=\"'title'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'experiment.list.inputTitle' | translate  }}\">\r\n                        <input class=\"inputFilter\" *ngSwitchCase=\"'description'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'experiment.list.inputDescription' | translate  }}\">\r\n                        <input class=\"inputFilter\"*ngSwitchCase=\"'formatDate'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'experiment.list.inputDate' | translate  }}\">\r\n                        <p-dropdown class=\"inputFilter\" [options]=\"statuses\" *ngSwitchCase=\"'status'\" (onChange)=\"dt.filter($event.value, col.field, 'equals')\" styleClass=\"p-column-filter\" placeholder=\"{{ 'experiment.list.inputState' | translate  }}\" [showClear]=\"true\">\r\n                            <ng-template let-option pTemplate=\"item\">\r\n                                <span id=\"re\">{{ 'experiment.list.states.' + option.label | translate }}</span>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [pSelectableRow]=\"rowData\">\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <span *ngIf=\"col.field === 'status'\" id=\"{{rowData[col.field]}}\"> {{ 'experiment.list.states.' + rowData[col.field] | translate  }} </span>\r\n                   \r\n                        <button pButton pRipple type=\"button\" routerLink=\"/experiments/detail/{{ rowData['id'] }}\" title=\"{{ 'experiment.list.edit' | translate  }}\"\r\n                        *ngIf=\"col.field === 'acciones'\" icon=\"pi pi-pencil\"\r\n                        class=\"p-button-text p-button-plain\"></button>\r\n\r\n                        <span *ngIf=\"col.field !== 'status' && col.field !== 'acciones'\"> {{rowData[col.field]}} </span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"6\"><strong>{{ 'experiment.list.empty' | translate  }}</strong></td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';  \r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\n\r\n//Modules\r\nimport { ListExperimentComponent } from './experiment-list/listExperiments.component';\r\nimport { AddExperimentComponent } from './experiment-add/addExperiment.component';\r\nimport { BinnacleComponent } from './binnacle/components/binnacleExperiment.component';\r\nimport { DetailExperimentComponent } from './experiment-detail/detailExperiment.component';\r\nimport { EditExperimentComponent } from './experiment-edit/editExperiment.component'\r\nimport { InvestigatorsAssociatedComponent } from './investigators-associated/investigatorsAssociated.component'\r\n\r\n//Rutas\r\nimport { experimentRoute } from './experiment.route'\r\n\r\n//PrimeNg\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport {TableModule} from 'primeng/table';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {DynamicDialogModule} from 'primeng/dynamicdialog';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {ToolbarModule} from 'primeng/toolbar';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\n\r\n\r\n//Translation\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(experimentRoute),\r\n\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        InputTextareaModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MessagesModule,\r\n        CalendarModule,\r\n        MessageModule,\r\n        ToastModule,\r\n        RadioButtonModule,\r\n        ToolbarModule,\r\n        CheckboxModule,\r\n        PanelModule,\r\n        TableModule,\r\n        DropdownModule,\r\n        DialogModule,\r\n        DynamicDialogModule,\r\n        TranslateModule.forRoot({\r\n            defaultLanguage : 'es',\r\n            loader: {\r\n              provide: TranslateLoader,\r\n              useFactory: (http: HttpClient) => {\r\n                return new TranslateHttpLoader(http);\r\n              },\r\n              deps: [ HttpClient ]\r\n            }\r\n          }),\r\n    ],\r\n    exports: [           ],\r\n    declarations: [\r\n        ListExperimentComponent,\r\n        AddExperimentComponent,\r\n        BinnacleComponent,\r\n        DetailExperimentComponent,\r\n        EditExperimentComponent,\r\n        InvestigatorsAssociatedComponent\r\n    ],\r\n    entryComponents: [\r\n        ListExperimentComponent,\r\n        AddExperimentComponent,\r\n        BinnacleComponent,\r\n        DetailExperimentComponent,\r\n        EditExperimentComponent,\r\n        InvestigatorsAssociatedComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class ExperimentModule {}","import { Routes } from '@angular/router';\r\nimport { LoginGuardGuard } from '../../guards/login-guard'\r\nimport { ListExperimentComponent } from './experiment-list/listExperiments.component';\r\nimport { AddExperimentComponent } from './experiment-add/addExperiment.component';\r\nimport { DetailExperimentComponent } from './experiment-detail/detailExperiment.component'\r\n\r\nexport const experimentRoute: Routes = [   \r\n\r\n    {\r\n        path: 'experiments',\r\n        canActivate: [LoginGuardGuard],\r\n        component: ListExperimentComponent\r\n    },\r\n    {\r\n        path: 'experiments/register',\r\n        canActivate: [LoginGuardGuard],\r\n        component: AddExperimentComponent\r\n    },\r\n    {\r\n        path: 'experiments/detail/:id',\r\n        canActivate: [LoginGuardGuard],\r\n        component: DetailExperimentComponent\r\n    }\r\n\r\n]","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { ExperimentAdd } from './model/experimentAdd'\r\nimport { Experiment } from './model/experiment'\r\nimport { Device } from './model/device'\r\nimport { Identifier } from '../shared/model/identifier';\r\nimport { Investigator } from '../investigator/model/investigator'\r\n\r\n@Injectable()\r\nexport class ExperimentService {\r\n\r\n    urlBase = 'https://tfmexperiments.herokuapp.com/experiment';               //--PRODUCCIÓN\r\n    //urlBase = 'http://localhost:8090/experiment';                             //--LOCAL\r\n\r\n    token;\r\n\r\n    //Sirve para identificar si un experimento ha sido creado o no\r\n    experimentCreated: Boolean = false; \r\n\r\n    //Sirve para identificar si un experimento ha sido eliminado o no\r\n    deleted: boolean = false;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n    /**\r\n     * Envía una petición al servidor para registrar un nuevo experimento\r\n     * @param experiment , datos enviados\r\n     */\r\n    public register(experiment: ExperimentAdd){\r\n        var url = this.urlBase + \"/register\";\r\n        var body = experiment;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.post(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para actualizar los datos de un experimento\r\n     * @param experiment datos del experimento que serán actualizados\r\n     */\r\n    public update(experiment: Experiment){\r\n        var url = this.urlBase + \"/update\";\r\n        var body = experiment;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener el detalle de los dato de un experimento\r\n     * @param id identificador del experimento del que se quiere obtene el detalle\r\n     */\r\n    public detail(id: number){\r\n        var url = this.urlBase + \"/detail/\" + id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.get(url, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Realiza una petición al servidor para realizar la apertura de un experimnto que se pasa como parámetro\r\n     * @param id identificador del experimento que se quiere abrir\r\n     */\r\n    public open(id: Identifier){\r\n        var url = this.urlBase + \"/open\";\r\n        var body = id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Realiza una petición al servidor para realizar la eliminación de un experimento que se pasa como parámetro\r\n     * @param id identificador del experimento\r\n     */\r\n    public delete(id: Identifier){\r\n        var url = this.urlBase + \"/delete\";\r\n        var body = id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n    \r\n    /**\r\n     * Realiza una petición al servidor para realizar el cierre de un experimento que se pasa como parámetro\r\n     * @param id identificador del experimento\r\n     */\r\n    public close(id: Identifier){\r\n        var url = this.urlBase + \"/close\";\r\n        var body = id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Realiza una petición al servidor para realizar la re-apertura de un experimento que se pasa como parámetro\r\n     * @param id identificador del experimento\r\n     */\r\n    public reOpen(id: Identifier){\r\n        var url = this.urlBase + \"/reopen\";\r\n        var body = id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Devuelve la lista de investigadores asociados al experimento \r\n     * @param idExperiment identificador del experimento\r\n     */\r\n    public getInvestigatorsOfExperiment(idExperiment: number){\r\n        var url = this.urlBase + \"/investigators/\" + idExperiment;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Investigator[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n    /**\r\n     * Devuelve la lista de investigadores que pueden ser asociados al experimento que se pasa como parámetro\r\n     * @param idExperiment identificador del experimento\r\n     */\r\n    public getInvestigatorsNotAssociatedAnExperiment(idExperiment: number){\r\n        var url = this.urlBase + \"/investigators/not/associated/\" + idExperiment;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Investigator[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n    /**\r\n     * Devuelve la lista de dispositivos existentes sobre los que se realizan los experimentos \r\n     */\r\n    public getAllDevices(){\r\n        var url = this.urlBase + \"/all/devices/\";\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Device[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n}","import {Component, OnInit, Input } from '@angular/core';\r\nimport { ExperimentService } from '../experiment.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Investigator } from '../../investigator/model/investigator';\r\nimport { PetitionService } from '../../petition/petition.service'\r\nimport { Petition } from '../../petition/model/petition';\r\nimport { Message } from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'investigators-associated',\r\n  templateUrl: './investigatorAssociated.component.html',\r\n  styleUrls: ['./investigatorAssociated.component.css' , '../../shared/common-style.css'],\r\n  providers: [MessageService]\r\n\r\n})\r\nexport class InvestigatorsAssociatedComponent implements OnInit{ \r\n\r\n    //Experimento en cuestión\r\n    @Input(\"idExperiment\") idExperiment : number;\r\n\r\n    //Lista de investigadores que pueden ser asociados al experimento en cuestión\r\n    investigatorsNotAssociated : Investigator[] = []\r\n\r\n    //Sirve para mostrar/ocultar la lista de investigadores no asociados al experimento\r\n    displayModalNewAssociation: boolean;\r\n\r\n    //Sirve para mostrar/ocultar la ventana modal de confirmación de asociación\r\n    displayModalConfirmAssociation: boolean;\r\n\r\n    //Identificador del investigador que se ha elegido para llevar a cabo la asociación\r\n    private idInvestigator : number;\r\n\r\n    //Identifica si ha seleccionado ser gestor o no\r\n    gestor: string;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    //Lista de investigadores\r\n    investigators: Investigator[] = [];\r\n\r\n    //Columnas de la tabla de investigadores\r\n    cols: any[];\r\n\r\n    constructor(\r\n        private experimentService: ExperimentService,\r\n        private translate: TranslateService,\r\n        private petitionService: PetitionService,\r\n        private messageService: MessageService,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.experimentService.getInvestigatorsOfExperiment(this.idExperiment)\r\n            .then(investigators => this.investigators = investigators);\r\n\r\n        this.loadInvestigatorsNotAssociated();\r\n\r\n        this.cols = [\r\n            { field: 'name', header: 'name', width: '15%' },\r\n            { field: 'mail', header: 'mail', width: '40%' },\r\n            { field: 'username', header: 'username', width: '20%'},\r\n            { field: 'manager', header: 'rol', width: '10%' }\r\n        ];\r\n        \r\n    }\r\n\r\n    private loadInvestigatorsNotAssociated(){\r\n        this.experimentService.getInvestigatorsNotAssociatedAnExperiment(this.idExperiment)\r\n            .then(investigatorsNotAssociated => this.investigatorsNotAssociated = investigatorsNotAssociated);\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana modal de añadir investigadores al experimento\r\n     */\r\n    public showModalInvestigators(){\r\n        this.displayModalNewAssociation = true;\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana de confirmación de envío de envío de asociación\r\n     * @param id identificar del investigador que se va a asociar\r\n     */\r\n    public showModalConfirmAssociation(id: number){\r\n        this.idInvestigator = id;\r\n        this.displayModalConfirmAssociation = true;\r\n    }\r\n\r\n    /**\r\n     * Cierra la ventana de confirmación de envío de asociación\r\n     */\r\n    public cancelModalConfirmAssociation(){\r\n        this.displayModalConfirmAssociation = false;\r\n    }\r\n\r\n    /**\r\n     * Confirma la asociación \r\n     */\r\n    public confirm(){\r\n        //Se lleva a cabo la creación de la petición correspondiente\r\n        var resObs = this.petitionService.register(this.createPetition());\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cierra la ventana modal de confirmación\r\n                this.cancelModalConfirmAssociation();\r\n                //Se establece como indefined el atributo gestor\r\n                this.gestor = undefined\r\n                //Se muestra un mensaje en pantalla indicando que la petición ha sido creada correctamente\r\n                this.translate.get('experiment.investigatorsAssociated.associationSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n                //Se recarga los investigadores que pueden ser asociados al experimento\r\n                this.loadInvestigatorsNotAssociated();\r\n            },\r\n            err => {\r\n                this.translate.get('experiment.investigatorsAssociated.associationErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Crea un objeto petición con los datos de la petición correspondiente\r\n     */\r\n    private createPetition(): Petition{\r\n        let petition = new Petition();\r\n        petition.idExperiment = this.idExperiment;\r\n        petition.idInvestigator = this.idInvestigator;\r\n        if(this.gestor !== undefined){\r\n            petition.manager = true;\r\n        }\r\n        else{\r\n            petition.manager = false;\r\n        }\r\n        return petition;\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    public show(sever: string, summ: string, info: string) {\r\n        this.messageService.add({severity: sever, summary: summ, detail: info});\r\n    }\r\n\r\n}\r\n","<p-toast></p-toast>\r\n<p-toast position=\"top-right\" key=\"tl\"></p-toast>\r\n\r\n<div id=\"headerInvestigators\">\r\n    <div id=\"titleInvestigators\">\r\n        <h3>{{ 'experiment.investigatorsAssociated.title' | translate }}</h3>\r\n    </div>\r\n    <div id=\"addAssociation\">\r\n        <p-button label=\"{{ 'experiment.investigatorsAssociated.newAssociation' | translate }}\" icon=\"pi pi-plus\" type=\"button\" (click)=\"showModalInvestigators()\" ></p-button>\r\n    </div>\r\n</div>\r\n<div  class=\"p-shadow-2\" id=\"divInvestigators\">\r\n    <p-table [columns]=\"cols\" [value]=\"investigators\" [scrollable]=\"true\" [rows]=\"100\" scrollHeight=\"493px\"\r\n    [virtualScroll]=\"true\" [virtualRowHeight]=\"34\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\r\n                    {{ 'experiment.investigatorsAssociated.' +  col.header | translate }}\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr style=\"height:34px\">\r\n                <td *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\">\r\n                    <span *ngIf=\"col.field === 'manager' && rowData[col.field]\"><strong>{{ 'experiment.investigatorsAssociated.gestor' | translate }}</strong></span>\r\n                    <span *ngIf=\"col.field !== 'manager'\">{{rowData[col.field]}}</span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"4\"><strong>{{ 'experiment.investigatorsAssociated.notInvestigators' | translate }}</strong></td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<!-- VENTANA MODAL lista de investigadores disponibles -->\r\n<p-dialog header=\"{{ 'experiment.investigatorsAssociated.newAssociation' | translate }}\" [(visible)]=\"displayModalNewAssociation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\"\r\n    [draggable]=\"false\" [resizable]=\"false\">\r\n    <p-table #dt [value]=\"investigatorsNotAssociated\" [paginator]=\"true\" [rows]=\"5\" [responsive]=\"true\">\r\n        <ng-template pTemplate=\"header\"  >\r\n            <tr>\r\n                <th>{{ 'experiment.investigatorsAssociated.name' | translate }}</th>\r\n                <th>{{ 'experiment.investigatorsAssociated.mail' | translate }}</th>\r\n                <th>{{ 'experiment.investigatorsAssociated.username' | translate }}</th>\r\n                <th style=\"width:4em\"></th>\r\n            </tr>\r\n            <tr>\r\n                <th [ngSwitch]=\"name\">\r\n                    <input class=\"inputFilter\" *ngSwitchCase=\"name\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'name', 'contains')\" placeholder=\"{{ 'experiment.investigatorsAssociated.filterName' | translate }}\">\r\n                </th>\r\n                <th [ngSwitch]=\"mail\">\r\n                    <input class=\"inputFilter\" *ngSwitchCase=\"mail\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'mail', 'contains')\" placeholder=\"{{ 'experiment.investigatorsAssociated.filterMail' | translate }}\">\r\n                </th>\r\n                <th [ngSwitch]=\"username\">\r\n                    <input class=\"inputFilter\"*ngSwitchCase=\"username\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, 'username', 'contains')\" placeholder=\"{{ 'experiment.investigatorsAssociated.filterUsername' | translate }}\">\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-investigator>\r\n            <tr>\r\n                <td>{{investigator.name}}</td>\r\n                <td>{{ investigator.mail }}</td>\r\n                <td>{{investigator.username}}</td>\r\n                <td>\r\n                    <button type=\"button\" pButton icon=\"pi pi-plus\" (click)=\"showModalConfirmAssociation(investigator.id)\" ></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td colspan=\"3\"><strong>{{ 'experiment.investigatorsAssociated.notInvestigators' | translate }}</strong></td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</p-dialog>\r\n\r\n<!-- VENTANA MODAL DE Confirmar una asociación -->\r\n<p-dialog header=\"{{ 'experiment.investigatorsAssociated.confirmAssociation' | translate }}\" [(visible)]=\"displayModalConfirmAssociation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\">\r\n    <p>{{ 'experiment.investigatorsAssociated.selectGestor' | translate }}</p>\r\n    <div class=\"p-field-checkbox\">\r\n        <p-checkbox name=\"group\" value=\"true\" [(ngModel)]=\"gestor\" inputId=\"g\"></p-checkbox>\r\n        <label for=\"g\">{{ 'experiment.investigatorsAssociated.gestor' | translate }}</label>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple icon=\"pi pi-check\" (click)=\"confirm()\" label=\"{{ 'experiment.investigatorsAssociated.register' | translate }}\" ></button>\r\n        <button pButton pRipple icon=\"pi pi-times\" (click)=\"cancelModalConfirmAssociation()\" label=\"{{ 'experiment.investigatorsAssociated.cancel' | translate }}\" class=\"p-button-secondary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n\r\n\r\n","export class Experiment {\r\n\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    creationDate: Date;\r\n    status: string;\r\n    idInvestigator: number;\r\n    formatDate?: string;\r\n\r\n    //Datos del investigador creador\r\n    nameInvestigator: String;\r\n    surnameInvestigator: String;\r\n    usernameInvestigator: String;\r\n    mailInvestigator: String;\r\n\r\n    //Datos demográficos\r\n    birthDate: Date;\r\n    idDevice: number;\r\n    gender: string;\r\n    laterality: string;\r\n\r\n}","import { LoginGuardGuard } from 'src/app/guards/login-guard';\r\n\r\nexport class ExperimentAdd {\r\n\r\n    title: string;\r\n    description: string;\r\n    idInvestigator: number;\r\n\r\n    //Demographic data\r\n    gender: string;\r\n    birthDate: Date;\r\n    laterality: string;\r\n    idDevice: number;\r\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { InvestigatorAdd } from '../model/investigator'\r\nimport { InvestigatorService } from '../investigator.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Message } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../../login/login.service'\r\n\r\n@Component({\r\n    selector: 'AddInvestigatorComponent',\r\n    templateUrl: './addInvestigator.component.html',\r\n    styleUrls: ['./addInvestigator.component.css', '../../shared/common-style.css']\r\n})\r\nexport class AddInvestigatorComponent {\r\n    \r\n    public registerInvestigator: FormGroup; \r\n\r\n    public investigator: InvestigatorAdd;\r\n\r\n    //Atributos de validación\r\n    passwordsIncorrects: Boolean;\r\n    mailAlreadyExist: Boolean;\r\n    usernameAlreadyExist: Boolean;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private investigatorService: InvestigatorService,\r\n        private translate: TranslateService,\r\n        private router: Router,\r\n        private loginService: LoginService\r\n    ){\r\n        this.registerInvestigator = this.fb.group({\r\n            name: ['', [Validators.required]],\r\n\t\t\tsurname: ['', [Validators.required]],\r\n            username: ['', [Validators.required]],\r\n            mail: ['', [Validators.required, Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$')]],\r\n            password: ['', [Validators.required, Validators.minLength(8)]],\r\n            repeatPassword: ['', [Validators.required, Validators.minLength(8)]],\r\n        });\r\n        this.investigator = new InvestigatorAdd();\r\n        this.passwordsIncorrects = false;\r\n        this.mailAlreadyExist = false;\r\n        this.usernameAlreadyExist = false;\r\n    }\r\n\r\n    /**\r\n     * Crea un objeto con los datos del formulario del investigador para enviarlos al servidor\r\n     */\r\n    private createInvestigator(){\r\n        this.investigator.name = this.registerInvestigator.value.name;\r\n        this.investigator.surname = this.registerInvestigator.value.surname;\r\n        this.investigator.username = this.registerInvestigator.value.username;\r\n        this.investigator.mail = this.registerInvestigator.value.mail;\r\n        this.investigator.password = this.registerInvestigator.value.password;\r\n        this.investigator.repeatPassword = this.registerInvestigator.value.repeatPassword;\r\n    }\r\n\r\n    private resetVariablesOfValidation(){\r\n        this.passwordsIncorrects = false;\r\n        this.mailAlreadyExist = false;\r\n        this.usernameAlreadyExist = false;\r\n    }\r\n\r\n    register(){ \r\n        this.createInvestigator();\r\n        this.hide();\r\n        this.resetVariablesOfValidation();\r\n        //Se comienza comprobando que las contraseñas coinciden\r\n        if(this.investigator.password !== this.investigator.repeatPassword){\r\n            this.passwordsIncorrects = true;\r\n        }\r\n        else{\r\n            //Se valida que el username introducido no esté ya registrado\r\n            var resObs = this.investigatorService.getInvestigatorByUsername(this.investigator.username);\r\n            resObs.subscribe(\r\n                res => {\r\n                    if(res == null){\r\n                        //Comprobamos que el mail no se encuentre registrado\r\n                        this.sendPetitionOfValidateMail();\r\n                    }\r\n                    else{\r\n                        //Si nos devuelve un investigador significa que el username ya está registrado\r\n                        this.usernameAlreadyExist = true;\r\n                    }\r\n                },\r\n                err => {\r\n                    this.translate.get('investigator.register.usernameErr').subscribe((data:any)=> {\r\n                        this.show(data);\r\n                    });\r\n                    console.log(err)\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    private sendPetitionOfValidateMail(){\r\n        var resObs = this.investigatorService.getInvestigatorByMail(this.investigator.mail);\r\n        resObs.subscribe(\r\n            res => {\r\n                if(res == null){\r\n                    //Registramos el investigador, ya que ha pasado las validaciones\r\n                    this.sendPetitionOfRegister()\r\n                }\r\n                else{\r\n                    //Si nos devuelve un investigador significa que el username ya está registrado\r\n                    this.mailAlreadyExist = true;\r\n                }\r\n            },\r\n            err => {\r\n                this.translate.get('investigator.register.mailErr').subscribe((data:any)=> {\r\n                    this.show(data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Hace una llamada al servicio de investigador para llevar a cabo el registro.\r\n     */\r\n    private sendPetitionOfRegister(){\r\n        var resObs = this.investigatorService.register(this.investigator);\r\n        resObs.subscribe(\r\n            res => {\r\n                this.loginService.setCreated(true);\r\n                this.router.navigate(['login/']);\r\n            },\r\n            err => {\r\n                this.translate.get('investigator.register.registerErr').subscribe((data:any)=> {\r\n                    this.show(data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    show(info: string) {\r\n        this.msgs = [{severity:'error', summary:'Message', detail: info}];\r\n    }\r\n\r\n    /**\r\n     * Limpia los mensajes del array\r\n     */\r\n    hide() {\r\n        this.msgs = [];\r\n    }\r\n\r\n}\r\n","\r\n<div id=\"alerts\">\r\n    <p-messages  [(value)]=\"msgs\" [enableService]=\"false\"></p-messages>\r\n</div>\r\n\r\n\r\n<form [formGroup]=\"registerInvestigator\" (ngSubmit)=\"register()\">\r\n    <div id=\"divPrin\">\r\n        <div class=\"p-shadow-7\" id=\"boxForm\" >\r\n            <div class=\"p-fluid\" id=\"boxInputs\">\r\n                <div id=\"title\" >\r\n                    <h3>{{ 'investigator.register.title' | translate }}</h3>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"firstname1\"><strong>{{ 'investigator.register.firstname' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n                        <input id=\"firstname1\" type=\"text\" maxlength=50 formControlName=\"name\" pInputText>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('name').touched && registerInvestigator.get('name').hasError('required')\">{{ 'investigator.register.validations.name' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"lastname1\"><strong>{{ 'investigator.register.surnames' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n                        <input id=\"lastname1\" type=\"text\" maxlength=50 formControlName=\"surname\" pInputText>\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('surname').touched && registerInvestigator.get('surname').hasError('required')\">{{ 'investigator.register.validations.surname' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"username1\"><strong>{{ 'investigator.register.username' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n                        <input id=\"username1\" type=\"text\" maxlength=20 formControlName=\"username\" pInputText> \r\n                    </div>\r\n                    <span class=\"spanErr\"  *ngIf=\"registerInvestigator.get('username').touched && registerInvestigator.get('username').hasError('required')\">{{ 'investigator.register.validations.username' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"usernameAlreadyExist === true\">{{ 'investigator.register.validations.usernameAlreadyExist' | translate }}</span>\r\n                </div>    \r\n                <div class=\"p-field\">\r\n                    <label for=\"mail1\"><strong>{{ 'investigator.register.mail' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-envelope\"></i></span>\r\n                        <input id=\"mail1\" type=\"text\" maxlength=50  formControlName=\"mail\" pInputText> \r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('mail').touched && registerInvestigator.get('mail').hasError('required')\">{{ 'investigator.register.validations.mail' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('mail').touched && registerInvestigator.get('mail').hasError('pattern')\">{{ 'investigator.register.validations.mailFormat' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"mailAlreadyExist === true\">{{ 'investigator.register.validations.mailAlreadyExist' | translate }}</span>\r\n                </div>    \r\n                <div class=\"p-field\">\r\n                    <label for=\"password1\"><strong>{{ 'investigator.register.password' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\r\n                        <input id=\"password1\" type=\"password\" maxlength=50 formControlName=\"password\" pPassword />\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('password').touched && registerInvestigator.get('password').hasError('required')\">{{ 'investigator.register.validations.password' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('password').touched && registerInvestigator.get('password').hasError('minlength')\">{{ 'investigator.register.validations.passwordLength' | translate }}</span>\r\n                </div>\r\n                <div class=\"p-field\">\r\n                    <label for=\"password2\"><strong>{{ 'investigator.register.repeatPassword' | translate }}</strong></label>\r\n                    <div class=\"p-inputgroup\">\r\n                        <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\r\n                        <input id=\"password2\" type=\"password\" maxlength=50 formControlName=\"repeatPassword\" pPassword />\r\n                    </div>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('repeatPassword').touched && registerInvestigator.get('repeatPassword').hasError('required')\">{{ 'investigator.register.validations.password' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"passwordsIncorrects === true\">{{ 'investigator.register.validations.samesPasswords' | translate }}</span>\r\n                    <span class=\"spanErr\" *ngIf=\"registerInvestigator.get('repeatPassword').touched && registerInvestigator.get('repeatPassword').hasError('minlength')\">{{ 'investigator.register.validations.passwordLength' | translate }}</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"boxButton\">\r\n                <p-button label=\"{{ 'investigator.register.register' | translate }}\" id=\"formButton\" type=\"submit\"  [disabled]=registerInvestigator.invalid></p-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';  \r\n\r\nimport { AddInvestigatorComponent } from './investigator-add/addInvestigator.component';\r\n\r\nimport {CustomPrimaryButtonComponent} from '../shared/buttons/custom.primary.button';\r\nimport {CustomInputTextComponent} from '../shared/inputs/custom.input.text'\r\n\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\n\r\n\r\n//Rutas\r\nimport { investigatorRoute } from './investigator.route'\r\n\r\n//PRIMENG\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\n\r\n \r\n//Translation\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(investigatorRoute),\r\n        ButtonModule,\r\n        InputTextModule,\r\n        PasswordModule,\r\n        FormsModule,\r\n        MessagesModule,\r\n        MessageModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        TranslateModule.forRoot({\r\n            defaultLanguage : 'es',\r\n            loader: {\r\n              provide: TranslateLoader,\r\n              useFactory: (http: HttpClient) => {\r\n                return new TranslateHttpLoader(http);\r\n              },\r\n              deps: [ HttpClient ]\r\n            }\r\n          }),\r\n    ],\r\n    declarations: [\r\n        AddInvestigatorComponent,\r\n        CustomPrimaryButtonComponent,\r\n        CustomInputTextComponent\r\n    ],\r\n    entryComponents: [\r\n        AddInvestigatorComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class InvestigatorModule {}","import { Routes } from '@angular/router';\r\n\r\nimport { AddInvestigatorComponent } from './investigator-add/addInvestigator.component';\r\n\r\n\r\nexport const investigatorRoute: Routes = [\r\n\r\n    {\r\n        path: 'investigator/register',\r\n        component: AddInvestigatorComponent\r\n    }\r\n\r\n]","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Experiment } from '../experiment/model/experiment'\r\nimport { InvestigatorAdd } from './model/investigator'\r\n\r\n@Injectable()\r\nexport class InvestigatorService {\r\n\r\n    urlBase = 'https://tfmexperiments.herokuapp.com/investigator';               //--PRODUCCIÓN\r\n    //urlBase = 'http://localhost:8090/investigator';                             //--LOCAL\r\n\r\n    token;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n    /**\r\n     * Envía una petición al servidor para registrar un nuevo investigador\r\n     * @param investigator , datos enviados\r\n     */\r\n    public register(investigator: InvestigatorAdd){\r\n        var url = this.urlBase + \"/register\";\r\n        var body = investigator;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.post(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener a un investigador a partir del email\r\n     * @param mail parámetro de entrada\r\n     */\r\n    public getInvestigatorByMail(mail: String){\r\n        var url = this.urlBase + \"/mail/\" + mail;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.get(url, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener a un investigador a partir del username\r\n     * @param mail parámetro de entrada\r\n     */\r\n    public getInvestigatorByUsername(username: String){\r\n        var url = this.urlBase + \"/username/\" + username;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.get(url, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener la lista de experimentos de un investigador\r\n     * @param id identificador del investigador\r\n     */\r\n    public getExperimentsAcceptedByInvestigator(id: number){\r\n        var url = this.urlBase + \"/experiments/accepted/\" + id;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Experiment[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n    /**\r\n     * Devuelve los datos del investigador que se encuentra en sesión\r\n     */\r\n    public getUserInSession(){\r\n        var url = this.urlBase + \"/in/session\";\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        var resObservable = this.http.get(url, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n}","export class InvestigatorAdd {\r\n\r\n    id: number;\r\n    name: string;\r\n    surname: string;\r\n    mail: string;\r\n    username: string;\r\n    password: string;\r\n    repeatPassword: string;\r\n\r\n}\r\n\r\nexport class Investigator {\r\n\r\n    id: number;\r\n    name: string;\r\n    surname: string;\r\n    mail: string;\r\n    username: string;\r\n    role: string;\r\n\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenService } from './token.service';\r\n\r\nconst header = 'Authorization';\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private token: TokenService\r\n    ) { \r\n\r\n    }\r\n\r\n    /**\r\n     * Método de la clase HttpInterceptor encargado de interceptar los tokens\r\n     * @param req \r\n     * @param next \r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        var req2 = req;\r\n\r\n        const token = this.token.getToken();\r\n\r\n        if (token != null) {\r\n            req2 = req.clone({headers:req.headers.set(header, 'Bearer ' + token) });\r\n        }\r\n        \r\n        return next.handle(req2);\r\n    }\r\n}\r\n//Exporta el interceptor que se encarga de interceptar el envío de tokens entre el cliente y el servidor\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true }\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TokenService } from './token.service';\r\nimport { LoginData } from './login.credentials';\r\nimport { SessionStorageService } from 'angular-web-storage';\r\nimport { InvestigatorService } from '../../investigator/investigator.service';\r\nimport { Router } from '@angular/router';\r\nimport { Investigator } from '../../investigator/model/investigator'\r\nimport { Message } from 'primeng/api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'LoginComponente',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css', '../../shared/common-style.css' ]\r\n})\r\nexport class LoginComponent {\r\n\r\n  //VARIABLES para mostrar error de autenticación al usuario\r\n  isLoginFailed;\r\n\r\n   //Alertas\r\n   msgs: Message[];\r\n\r\n  private roles: string[] = [];\r\n\r\n  private loginData: LoginData;\r\n  loginInvestigator: FormGroup;\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private fb: FormBuilder,\r\n    private tokenService: TokenService,\r\n    private session : SessionStorageService,\r\n    private router: Router,\r\n    private investigatorService : InvestigatorService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.isLoginFailed = false;\r\n    this.loginInvestigator = this.fb.group({\r\n        login: ['', [Validators.required]],\r\n        password: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.tokenService.getToken()) {\r\n      this.roles = this.tokenService.getAuthorities();\r\n    }\r\n    //Alerta de registro correcto\r\n    if (this.loginService.isCreated()) {\r\n      this.loginService.setCreated(false);\r\n      this.translate.get('investigator.register.registerSuccess').subscribe((data:any)=> {\r\n          this.show(data, 'success');\r\n      });\r\n      setTimeout(() => this.hide(), 5000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crea un objeto con los datos del formulario\r\n   */\r\n  private createUser(){\r\n    var username = this.loginInvestigator.value.login;\r\n    var password = this.loginInvestigator.value.password;\r\n    return new LoginData(username, password);\r\n  }\r\n\r\n  /**\r\n   * Identifica al usuario que introdijo los datos en el formulario\r\n   */\r\n  identifyUser(): void {\r\n\r\n    this.loginData = this.createUser();\r\n\r\n    this.loginService.identifyUser(this.loginData).subscribe(\r\n      data => {\r\n          //Se guarda el token del usuario en sesión\r\n          this.tokenService.save(data.accessToken);\r\n          //Se guarda el nombre de usuario en sesión\r\n          this.tokenService.saveUser(data.username);\r\n          //Se guarda la rol del usuario en sesión\r\n          this.tokenService.saveAuths(data.authorities);\r\n          //mostrar al usuario que no hay error de logeo\r\n          this.isLoginFailed = false;\r\n          //Se devuelve el rol del usuario\r\n          this.roles = this.tokenService.getAuthorities();\r\n          this.authentication(); \r\n      },\r\n      error => {\r\n        if(error.status === 401){\r\n          this.isLoginFailed = true;\r\n        }\r\n        else{\r\n          this.translate.get('login.loginErr').subscribe((data:any)=> {\r\n            this.show(data, 'error');\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  /**\r\n   * Dependiendo del usuario que se ha autenticado, redirigirá a una url u otra\r\n   */\r\n  authentication() {\r\n      if (this.tokenService.getToken()) {\r\n          this.userInSession();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Usuario en sesión \r\n   */\r\n  userInSession() {\r\n      var resObs = this.investigatorService.getUserInSession();\r\n      resObs.subscribe(\r\n          res => {\r\n              //Almacenamos en sesión los datos del usuario\r\n              this.session.set(\"investigator\", this.createInvestigator(res));\r\n              this.setAuthority();\r\n              this.session.set(\"logged\", true);\r\n          },\r\n        err => {\r\n          this.translate.get('login.loginErr').subscribe((data:any)=> {\r\n            this.show(data, 'error');\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  private setAuthority(){\r\n      this.roles = this.tokenService.getAuthorities();\r\n      this.roles.every(role => {\r\n          if (role === 'INVESTIGATOR_EVALUATION') {\r\n              this.router.navigate(['/experiments']);\r\n              return false;\r\n          } else if (role === 'INVESTIGATOR_VALIDATED') {\r\n              this.router.navigate(['/experiments']);\r\n              return false;\r\n          }\r\n          this.router.navigate(['/experiments']);\r\n          return true;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Crea un objeto con los datos del investigador que se encuentra en sesión\r\n   */\r\n  private createInvestigator(data: any){\r\n      let investigator = new Investigator();\r\n\r\n      investigator.id = data.id;\r\n      investigator.mail = data.mail;\r\n      investigator.name = data.name;\r\n      investigator.role = data.role;\r\n      investigator.surname = data.surname;\r\n      investigator.username = data.username;\r\n\r\n      return investigator;\r\n  }\r\n\r\n  /**\r\n    * Mostrar alertas en pantalla\r\n  */\r\n  show(info: string, sever: string) {\r\n      this.msgs = [{severity: sever, summary:'Message', detail: info}];\r\n  }\r\n\r\n  /**\r\n   * Limpia los mensajes del array\r\n   */\r\n  hide() {\r\n      this.msgs = [];\r\n  }\r\n\r\n}\r\n","\r\n<div id=\"alerts\">\r\n    <p-messages  [(value)]=\"msgs\" [enableService]=\"false\"></p-messages>\r\n</div>\r\n\r\n<div id=\"widget-login\">\r\n    <form [formGroup]=\"loginInvestigator\" (ngSubmit)=\"identifyUser()\">\r\n        <div id=\"divPrin\">\r\n            <div class=\"p-shadow-7\" id=\"boxForm\" >\r\n                <div class=\"p-fluid\" id=\"boxInputs\">\r\n                    <div id=\"imgDiv\"> \r\n                        <img src=\"../../../../assets/img/icon.png\"  class=\"d-inline-block align-top\" alt=\"Icono aplicación\" />\r\n                    </div>\r\n                    <div id=\"title\" >\r\n                        <h3>{{ 'login.title' | translate }}</h3>\r\n                    </div>\r\n                    <div class=\"p-field\">\r\n                        <label for=\"username\"><strong>{{ 'login.username' | translate }}</strong></label>\r\n                        <div class=\"p-inputgroup\">\r\n                            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n                            <input id=\"username\" type=\"text\" formControlName=\"login\" pInputText>\r\n                        </div>\r\n                        <span class=\"spanErr\" *ngIf=\"loginInvestigator.get('login').touched && loginInvestigator.get('login').hasError('required')\">{{ 'login.validations.username' | translate }}</span>\r\n                    </div>\r\n                    <div class=\"p-field\">\r\n                        <label for=\"password1\"><strong>{{ 'login.password' | translate }}</strong></label>\r\n                        <div class=\"p-inputgroup\">\r\n                            <span class=\"p-inputgroup-addon\"><i class=\"pi pi-lock\"></i></span>\r\n                            <input id=\"password1\" formControlName=\"password\" type=\"password\" pInputText>\r\n                        </div>\r\n                        <span class=\"spanErr\" *ngIf=\"loginInvestigator.get('password').touched && loginInvestigator.get('password').hasError('required')\">{{ 'login.validations.password' | translate }}</span>\r\n                    </div>\r\n                    <div *ngIf=\"isLoginFailed\">\r\n                        <span class=\"spanErr\">{{ 'login.validations.wrongCredentials' | translate }}</span>\r\n                    </div>\r\n                    <div id=\"boxButton\">\r\n                        <p-button label=\"{{ 'login.login' | translate }}\" id=\"formButton\" type=\"submit\"  [disabled]=loginInvestigator.invalid></p-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n","export class LoginData {\r\n\r\n    //Esta clase contiene los datos necesarios para loguearse (usuario y contraseña)\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username, password) \r\n    {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\nconst auths = 'AuthAuthorities';\r\nconst username = 'AuthUsername';\r\nconst key = 'AuthToken';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  private roles: Array<string> = [];\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  //Guarda el nombre de usuario del usuario en sesión\r\n  saveUser(username) {\r\n    window.sessionStorage.removeItem(username);\r\n    window.sessionStorage.setItem(username, username);\r\n  }\r\n\r\n  //Guarda el token del usuario en sesión\r\n  save(token) {\r\n    window.sessionStorage.removeItem(key);\r\n    window.sessionStorage.setItem(key, token);\r\n  }\r\n\r\n  //Guarda el rol del usuario en sesión\r\n  saveAuths(authorities) {\r\n    window.sessionStorage.removeItem(auths);\r\n    window.sessionStorage.setItem(auths, JSON.stringify(authorities));\r\n  }\r\n\r\n  getUser() {\r\n    return sessionStorage.getItem(username);\r\n  }\r\n\r\n  //Devuelve el token del usuario en sesión\r\n  getToken() {\r\n    return sessionStorage.getItem(key);\r\n  }\r\n\r\n  //Cierra sesión\r\n  out() {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  //Devuelve una lista de roles del usuario en sesión\r\n  getAuthorities(){\r\n    this.roles = [];\r\n\r\n    if (sessionStorage.getItem(key)) {\r\n\r\n      JSON.parse(sessionStorage.getItem(auths)).forEach(auth => {\r\n\r\n        this.roles.push(auth.authority);\r\n\r\n      });\r\n    }\r\n\r\n    return this.roles;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';  \r\n\r\nimport { LoginComponent } from './login-files/login.component';\r\n\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\n\r\n\r\n//Rutas\r\nimport { loginRoute } from './login.route'\r\n\r\n//PRIMENG\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\n\r\n \r\n//Translation\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(loginRoute),\r\n        ButtonModule,\r\n        InputTextModule,\r\n        FormsModule,\r\n        MessagesModule,\r\n        MessageModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        TranslateModule.forRoot({\r\n            defaultLanguage : 'es',\r\n            loader: {\r\n              provide: TranslateLoader,\r\n              useFactory: (http: HttpClient) => {\r\n                return new TranslateHttpLoader(http);\r\n              },\r\n              deps: [ HttpClient ]\r\n            }\r\n          }),\r\n    ],\r\n    declarations: [\r\n        LoginComponent,\r\n    ],\r\n    entryComponents: [\r\n        LoginComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class LoginModule {}","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login-files/login.component';\r\n\r\n\r\nexport const loginRoute: Routes = [\r\n\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }\r\n\r\n]","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { ResponseToken } from '../login/login-files/jwt-response';\r\nimport { LoginData } from '../login/login-files/login.credentials';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    urlBase = 'https://tfmexperiments.herokuapp.com/';\r\n    //urlBase = 'http://localhost:8090/';\r\n\r\n    //Identifica si un usuario ha sido registrado\r\n    private investigatorCreated : boolean = false;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n     ) {\r\n     }\r\n\r\n     /**\r\n      * Envía una petición al servidor para comprobar si los credenciales que el usuario introdujo en el login son correctos\r\n      * @param data \r\n      */\r\n    identifyUser(data: LoginData) {\r\n        var url = this.urlBase + \"login\";\r\n        return this.http.post<ResponseToken>(url, data, httpOptions);\r\n    };\r\n\r\n    public setCreated(created: boolean){\r\n      this.investigatorCreated = created;\r\n    }\r\n\r\n    public isCreated(): boolean{\r\n      return this.investigatorCreated;\r\n    }\r\n\r\n}\r\n","export class Petition {\r\n\r\n    id: number;\r\n    idInvestigator: number;\r\n    statusPetition: string;\r\n    shippingDate: Date;\r\n\tanswerDate: Date;\r\n    manager: boolean;\r\n    creator: boolean;\r\n    formatDate: string;\r\n\r\n    //Datos del experimento asociado a la petición\r\n    idExperiment: number;\r\n\ttitle: string;\r\n\tdescription: string;\r\n    statusExperiment: string;\r\n    \r\n    //Datos del investigador que recibe la petición\r\n    name: string;\r\n\tsurname: string;\r\n\tusername: string;\r\n\tmail: string;\r\n\r\n}","import {Component, OnInit } from '@angular/core';\r\nimport { PetitionService } from '../petition.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Petition } from '../model/petition';\r\nimport { Message } from 'primeng/api';\r\nimport { Identifier } from '../../shared/model/identifier'\r\nimport {MessageService} from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'petition-received',\r\n  templateUrl: './petition.component.html',\r\n  styleUrls: ['./petition.component.css' , '../../shared/common-style.css'],\r\n  providers: [MessageService]\r\n\r\n})\r\nexport class PetitionReceivedComponent implements OnInit{ \r\n\r\n    //Lista de peticiones\r\n    petitions: Petition[];\r\n\r\n    //Columnas de la tabla\r\n    cols: any[];\r\n\r\n    //Estados de la petición para el filtrado\r\n    statuses: any[];\r\n\r\n    //representa el mostrar o no la ventana modal de aceptación\r\n    displayAcceptConfirmation: boolean;\r\n\r\n    //Representa el mostrar o no la ventana modal de rechazo\r\n    displayRejectConfirmation: boolean;\r\n\r\n    //Representa el mostrar o no la ventana modal de cancelación\r\n    displayCancelConfirmation: boolean;\r\n\r\n    //Identificador de la petición que se va a cancelar\r\n    private petition : Petition;\r\n\r\n    //Identifica si la vista es para peticiones enviadas o recibidas\r\n    petitionSent: boolean = false;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private petitionService: PetitionService,\r\n        private translate: TranslateService,\r\n        private messageService: MessageService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.petitionService.getPetitionsReceived()\r\n            .then(petitions => this.petitions = this.parserDate(petitions));\r\n            \r\n        this.cols = [\r\n            { field: 'title', header: 'titleExperiment', width: '22%' },\r\n            { field: 'description', header: 'descriptionExperiment', width: '29%' },\r\n            { field: 'formatDate', header: 'shippingDate', width: '17%'},\r\n            { field: 'statusPetition', header: 'statePetition', width: '17%' },\r\n            { field: 'manager', header: 'rol', width: '7%' },\r\n            { field: 'actions', header: 'actions', width: '9,5%' }\r\n        ];\r\n\r\n        this.statuses = [\r\n            {label: 'PENDING', value: 'PENDING'},\r\n            {label: 'ACCEPTED', value: 'ACCEPTED'},\r\n            {label: 'REJECTED', value: 'REJECTED'},\r\n            {label: 'CANCELLED', value: 'CANCELLED'}\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * Realiza la aceptación de una petición\r\n     */\r\n    public acceptPetition(){\r\n        let identifier = new Identifier(this.petition.id);\r\n        var resObs = this.petitionService.accept(identifier);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cambia el estado a la petición\r\n                this.petition.statusPetition = 'ACCEPTED';\r\n                 //Se cierra la ventana modal\r\n                this.displayAcceptConfirmation = false;\r\n                //Se muestra un mensaje de confirmación\r\n                this.translate.get('petition.received.acceptSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('petition.received.acceptErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n     /**\r\n     * Realiza el rechazo de una petición\r\n     */\r\n    public rejectPetition(){\r\n        let identifier = new Identifier(this.petition.id);\r\n        var resObs = this.petitionService.reject(identifier);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cambia el estado a la petición\r\n                this.petition.statusPetition = 'REJECTED';\r\n                 //Se cierra la ventana modal\r\n                this.displayRejectConfirmation = false;\r\n                //Se muestra un mensaje de confirmación\r\n                this.translate.get('petition.received.rejectSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('petition.received.rejectErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n     /**\r\n     * Realiza la cancelación de una petición\r\n     */\r\n    public cancelPetition(){\r\n        let identifier = new Identifier(this.petition.id);\r\n        var resObs = this.petitionService.cancel(identifier);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cambia el estado a la petición\r\n                this.petition.statusPetition = 'CANCELLED';\r\n                 //Se cierra la ventana modal\r\n                this.displayCancelConfirmation = false;\r\n                //Se muestra un mensaje de confirmación\r\n                this.translate.get('petition.sent.cancelSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('petition.sent.cancelErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Parsea las fechas de creación de las peticiones \r\n     * @param petitions lista de peticiones\r\n     */\r\n    private parserDate(petitions: Petition[]) : Petition[]{\r\n        petitions.forEach(petition => {\r\n            let date = new Date(petition.shippingDate);\r\n            petition.formatDate = this.parserNumber(date.getDate()) + \r\n            \"/\" + this.parserNumber((date.getMonth()+1)) + \"/\" + this.parserNumber(date.getFullYear())\r\n        });\r\n        return petitions;\r\n    }\r\n\r\n    /**\r\n     * Parsea un número si solo tiene un dígito\r\n     * @param num \r\n     */\r\n    private parserNumber(num: number){\r\n        if(num.toString().length == 1){\r\n            return \"0\" + num;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana modal de confirmación de aceptar petición\r\n     */\r\n    public showAcceptConfirmationModal(petition: Petition){\r\n        this.displayAcceptConfirmation = true;\r\n        this.petition = petition;\r\n    }\r\n\r\n     /**\r\n     * Muestra la ventana modal de confirmación de rechazar petición\r\n     */\r\n    public showRejectConfirmationModal(petition: Petition){\r\n        this.displayRejectConfirmation = true;\r\n        this.petition = petition;\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana modal de confirmación en la cancelación\r\n     */\r\n    public showConfirmationModal(petition: Petition){\r\n        this.displayCancelConfirmation = true;\r\n        this.petition = petition;\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    public show(sever: string, summ: string, info: string) {\r\n        this.messageService.add({severity: sever, summary: summ, detail: info});\r\n    }\r\n\r\n}\r\n","\r\n<p-toast></p-toast>\r\n<p-toast position=\"top-right\" key=\"tl\"></p-toast>\r\n<div id=\"divPrin\">\r\n    <div id=\"header\">\r\n        <h2 *ngIf=\"petitionSent\">{{ 'petition.sent.title' | translate }}</h2>\r\n        <h2 *ngIf=\"!petitionSent\">{{ 'petition.received.title' | translate }}</h2>\r\n    </div>\r\n    <div id=\"contentTable\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"petitions\" [paginator]=\"true\" [rows]=\"10\" id=\"table\" \r\n         [responsive]=\"true\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [ngStyle]=\"{'width': col.width}\" >\r\n                        <span class=\"headerTitlesTable\">{{ 'petition.sent.' + col.header | translate }}</span>\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\">\r\n                        <span *ngIf=\"petitionSent\"><input  class=\"inputFilter\" *ngSwitchCase=\"'username'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'petition.sent.inputUsername' | translate  }}\"></span>\r\n                        <input class=\"inputFilter\" *ngSwitchCase=\"'title'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'petition.sent.inputTitle' | translate  }}\">\r\n                        <input class=\"inputFilter\" *ngSwitchCase=\"'description'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'petition.sent.inputDescription' | translate  }}\">\r\n                        <input class=\"inputFilter\" *ngSwitchCase=\"'formatDate'\" pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, 'contains')\" placeholder=\"{{ 'petition.sent.inputDate' | translate  }}\">\r\n                        <p-dropdown class=\"inputFilter\" [options]=\"statuses\" *ngSwitchCase=\"'statusPetition'\" (onChange)=\"dt.filter($event.value, col.field, 'equals')\" styleClass=\"p-column-filter\" placeholder=\"{{ 'petition.sent.inputState' | translate  }}\" [showClear]=\"true\">\r\n                            <ng-template let-option pTemplate=\"item\">\r\n                                <span id=\"re\">{{ 'petition.sent.states.' + option.label | translate }}</span>\r\n                            </ng-template>\r\n                        </p-dropdown>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n                <tr [pSelectableRow]=\"rowData\">\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <span *ngIf=\"col.field === 'username'\"> {{rowData['username']}} </span>\r\n                        <span *ngIf=\"col.field === 'title'\"> {{rowData['title']}} </span>\r\n                        <span *ngIf=\"col.field === 'description'\"> {{rowData['description']}} </span>\r\n                        <span *ngIf=\"col.field === 'formatDate'\">{{ rowData[col.field] }}</span>\r\n                        <span *ngIf=\"col.field === 'manager' && rowData['manager'] === true\"><strong>{{ 'petition.sent.manager' | translate  }}</strong></span>\r\n                        <span *ngIf=\"col.field === 'statusPetition'\" class=\"{{rowData[col.field]}}\"> {{ 'petition.sent.states.' + rowData[col.field] | translate  }} </span>\r\n                        \r\n                        <button pButton pRipple type=\"button\" (click)=\"showConfirmationModal(rowData)\" title=\"{{ 'petition.sent.cancelButton' | translate  }}\"\r\n                        *ngIf=\"col.field === 'actions' && (rowData['statusPetition'] !== 'CANCELLED' && rowData['statusPetition'] !== 'REJECTED') && petitionSent\" icon=\"pi pi-times\"\r\n                        class=\"p-button-text p-button-plain\"></button>\r\n\r\n                        <button pButton pRipple type=\"button\" (click)=\"showAcceptConfirmationModal(rowData)\" title=\"{{ 'petition.received.acceptButton' | translate  }}\"\r\n                        *ngIf=\"col.field === 'actions' && (rowData['statusPetition'] === 'PENDING') && !petitionSent\" icon=\"pi pi-check\"\r\n                        class=\"p-button-text p-button-plain\"></button>\r\n\r\n                        <button pButton pRipple type=\"button\" (click)=\"showRejectConfirmationModal(rowData)\" title=\"{{ 'petition.received.rejectButton' | translate  }}\"\r\n                        *ngIf=\"col.field === 'actions' && (rowData['statusPetition'] === 'PENDING') && !petitionSent\" icon=\"pi pi-times\"\r\n                        class=\"p-button-text p-button-plain\"></button>\r\n\r\n                        <button pButton pRipple type=\"button\" (click)=\"showConfirmationModal(rowData)\" title=\"{{ 'petition.sent.cancelButton' | translate  }}\"\r\n                        *ngIf=\"col.field === 'actions' && (rowData['statusPetition'] === 'ACCEPTED') && !petitionSent\" icon=\"pi pi-times\"\r\n                        class=\"p-button-text p-button-plain\"></button>\r\n \r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"emptymessage\">\r\n                <tr>\r\n                    <td colspan=\"6\"><strong>{{ 'petition.sent.empty' | translate  }}</strong></td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- VENTANA MODAL DE CONFIRMACIÓN CANCELACIÓN PETICIÓN -->\r\n<p-dialog header=\"{{ 'petition.sent.confirmation' | translate }}\" [(visible)]=\"displayCancelConfirmation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\">\r\n    <p>{{ 'petition.sent.cancelPetition' | translate }}</p>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple icon=\"pi pi-check\" (click)=\"cancelPetition()\" label=\"{{ 'petition.sent.yes' | translate }}\" class=\"p-button-danger\"></button>\r\n        <button pButton pRipple icon=\"pi pi-times\" (click)=\"displayCancelConfirmation=false\" label=\"{{ 'petition.sent.no' | translate }}\" class=\"p-button-secondary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n<!-- VENTANA MODAL DE CONFIRMACIÓN ACEPTAR PETICIÓN-->\r\n<p-dialog *ngIf=\"!petitionSent\" header=\"{{ 'petition.sent.confirmation' | translate }}\" [(visible)]=\"displayAcceptConfirmation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\">\r\n    <p>{{ 'petition.received.acceptPetition' | translate }}</p>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple icon=\"pi pi-check\" (click)=\"acceptPetition()\" label=\"{{ 'petition.sent.yes' | translate }}\" class=\"p-button-danger\"></button>\r\n        <button pButton pRipple icon=\"pi pi-times\" (click)=\"displayAcceptConfirmation=false\" label=\"{{ 'petition.sent.no' | translate }}\" class=\"p-button-secondary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n<!-- VENTANA MODAL DE CONFIRMACIÓN RECHAZAR PETICIÓN-->\r\n<p-dialog *ngIf=\"!petitionSent\" header=\"{{ 'petition.sent.confirmation' | translate }}\" [(visible)]=\"displayRejectConfirmation\" [modal]=\"true\" [style]=\"{width: '50vw'}\" [baseZIndex]=\"10000\">\r\n    <p>{{ 'petition.received.rejectPetition' | translate }}</p>\r\n    <ng-template pTemplate=\"footer\">\r\n        <button pButton pRipple icon=\"pi pi-check\" (click)=\"rejectPetition()\" label=\"{{ 'petition.sent.yes' | translate }}\" class=\"p-button-danger\"></button>\r\n        <button pButton pRipple icon=\"pi pi-times\" (click)=\"displayRejectConfirmation=false\" label=\"{{ 'petition.sent.no' | translate }}\" class=\"p-button-secondary\"></button>\r\n    </ng-template>\r\n</p-dialog>\r\n","import {Component, OnInit } from '@angular/core';\r\nimport { PetitionService } from '../petition.service'\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Petition } from '../model/petition';\r\nimport { Message } from 'primeng/api';\r\nimport { Identifier } from '../../shared/model/identifier'\r\nimport {MessageService} from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'petition-sent',\r\n  templateUrl: './petition.component.html',\r\n  styleUrls: ['./petition.component.css' , '../../shared/common-style.css'],\r\n  providers: [MessageService]\r\n\r\n})\r\nexport class PetitionSentComponent implements OnInit{ \r\n\r\n    //Lista de peticiones\r\n    petitions: Petition[];\r\n\r\n    //Columnas de la tabla\r\n    cols: any[];\r\n\r\n    //Estados de la petición para el filtrado\r\n    statuses: any[];\r\n\r\n    //representa \r\n    displayCancelConfirmation: boolean;\r\n\r\n    //Identificador de la petición que se va a cancelar\r\n    private petition : Petition;\r\n\r\n    //Identifica si la vista es para peticiones enviadas o recibidas\r\n    petitionSent: boolean = true;\r\n\r\n    //Alertas\r\n    msgs: Message[];\r\n\r\n    constructor(\r\n        private petitionService: PetitionService,\r\n        private translate: TranslateService,\r\n        private messageService: MessageService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.petitionService.getPetitionsSent()\r\n            .then(petitions => this.petitions = this.parserDate(petitions));\r\n            \r\n        this.cols = [\r\n            { field: 'username', header: 'username', width: '12,5%' },\r\n            { field: 'title', header: 'titleExperiment', width: '20%' },\r\n            { field: 'description', header: 'descriptionExperiment', width: '25%' },\r\n            { field: 'formatDate', header: 'shippingDate', width: '15%'},\r\n            { field: 'statusPetition', header: 'statePetition', width: '15%' },\r\n            { field: 'manager', header: 'rol', width: '5%' },\r\n            { field: 'actions', header: 'actions', width: '7,5%' }\r\n        ];\r\n\r\n        this.statuses = [\r\n            {label: 'PENDING', value: 'PENDING'},\r\n            {label: 'ACCEPTED', value: 'ACCEPTED'},\r\n            {label: 'REJECTED', value: 'REJECTED'},\r\n            {label: 'CANCELLED', value: 'CANCELLED'}\r\n        ]\r\n    }\r\n\r\n    /**\r\n     * Realiza la cancelación de una petición\r\n     * @param petition \r\n     */\r\n    public cancelPetition(){\r\n        let identifier = new Identifier(this.petition.id);\r\n        var resObs = this.petitionService.cancel(identifier);\r\n        resObs.subscribe(\r\n            res => {\r\n                //Se cambia el estado a la petición\r\n                this.petition.statusPetition = 'CANCELLED';\r\n                 //Se cierra la ventana modal\r\n                this.displayCancelConfirmation = false;\r\n                //Se muestra un mensaje de confirmación\r\n                this.translate.get('petition.sent.cancelSuccess').subscribe((data:any)=> {\r\n                    this.show('success', 'Success', data);\r\n                });\r\n            },\r\n            err => {\r\n                this.translate.get('petition.sent.cancelErr').subscribe((data:any)=> {\r\n                    this.show('error', 'Error', data);\r\n                });\r\n                console.log(err)\r\n            }\r\n        )\r\n    }\r\n\r\n    /**\r\n     * Parsea las fechas de creación de las peticiones \r\n     * @param petitions lista de peticiones\r\n     */\r\n    private parserDate(petitions: Petition[]) : Petition[]{\r\n        petitions.forEach(petition => {\r\n            let date = new Date(petition.shippingDate);\r\n            petition.formatDate = this.parserNumber(date.getDate()) + \r\n            \"/\" + this.parserNumber((date.getMonth()+1)) + \"/\" + this.parserNumber(date.getFullYear())\r\n        });\r\n        return petitions;\r\n    }\r\n\r\n    /**\r\n     * Parsea un número si solo tiene un dígito\r\n     * @param num \r\n     */\r\n    private parserNumber(num: number){\r\n        if(num.toString().length == 1){\r\n            return \"0\" + num;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    /**\r\n     * Muestra la ventana modal de confirmación en la cancelación\r\n     */\r\n    public showConfirmationModal(petition: Petition){\r\n        this.displayCancelConfirmation = true;\r\n        this.petition = petition;\r\n    }\r\n\r\n    /**\r\n     * Mostrar alertas en pantalla\r\n     */\r\n    public show(sever: string, summ: string, info: string) {\r\n        this.messageService.add({severity: sever, summary: summ, detail: info});\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';  \r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\r\n\r\n//Modules\r\nimport { PetitionSentComponent } from './petition-components/petitionSent.component'\r\nimport { PetitionReceivedComponent } from '../petition/petition-components/petitionReceived.component'\r\n\r\n//Rutas\r\nimport { petitionRoute } from './petition.route'\r\n\r\n//PrimeNg\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport {TableModule} from 'primeng/table';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {DynamicDialogModule} from 'primeng/dynamicdialog';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\n\r\n\r\n\r\n//Translation\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(petitionRoute),\r\n\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MessagesModule,\r\n        MessageModule,\r\n        ToastModule,\r\n        PanelModule,\r\n        CheckboxModule,\r\n        TableModule,\r\n        DropdownModule,\r\n        DialogModule,\r\n        DynamicDialogModule,\r\n        TranslateModule.forRoot({\r\n            defaultLanguage : 'es',\r\n            loader: {\r\n              provide: TranslateLoader,\r\n              useFactory: (http: HttpClient) => {\r\n                return new TranslateHttpLoader(http);\r\n              },\r\n              deps: [ HttpClient ]\r\n            }\r\n          }),\r\n    ],\r\n    exports: [           ],\r\n    declarations: [\r\n\r\n        PetitionSentComponent,\r\n        PetitionReceivedComponent\r\n\r\n    ],\r\n    entryComponents: [\r\n       \r\n        PetitionSentComponent,\r\n        PetitionReceivedComponent\r\n\r\n    ],\r\n    providers: []\r\n})\r\nexport class PetitionModule {}","import { Routes } from '@angular/router';\r\nimport { LoginGuardGuard } from '../../guards/login-guard'\r\nimport { PetitionSentComponent } from '../petition/petition-components/petitionSent.component'\r\nimport { PetitionReceivedComponent } from '../petition/petition-components/petitionReceived.component'\r\n\r\nexport const petitionRoute: Routes = [   \r\n\r\n    {\r\n        path: 'petitions/sent',\r\n        canActivate: [LoginGuardGuard],\r\n        component: PetitionSentComponent\r\n    },\r\n    {\r\n        path: 'petitions/received',\r\n        canActivate: [LoginGuardGuard],\r\n        component: PetitionReceivedComponent\r\n    }\r\n\r\n]","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Petition } from './model/petition';\r\nimport { Identifier } from '../shared/model/identifier';\r\n\r\n@Injectable()\r\nexport class PetitionService {\r\n\r\n    urlBase = 'https://tfmexperiments.herokuapp.com/petition';               //--PRODUCCIÓN\r\n    //urlBase = 'http://localhost:8090/petition';                             //--LOCAL\r\n\r\n    token;\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n    /**\r\n     * Envía una petición al servidor para registrar una nueva petición\r\n     * @param petition , datos enviados\r\n     */\r\n    public register(petition: Petition){\r\n        var url = this.urlBase + \"/register\";\r\n        var body = petition;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.post(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener la lista de peticiones enviadas por el usuario en sesión\r\n     */\r\n    public getPetitionsSent(){\r\n        var url = this.urlBase + \"/sent\";\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Petition[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para obtener la lista de peticiones recibidas por el usuario en sesión\r\n     */\r\n    public getPetitionsReceived(){\r\n        var url = this.urlBase + \"/received\";\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        headers.append('token', this.token);\r\n        return this.http.get<any>(url, { headers: headers })\r\n        .toPromise()\r\n        .then(res => <Petition[]>res)\r\n        .then(data => { return data; });\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para aceptar una petición\r\n     * @param identifier identificador de la petición\r\n     */\r\n    public accept(identifier: Identifier){\r\n        var url = this.urlBase + \"/accept\";\r\n        var body = identifier;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para rechazar una petición\r\n     * @param identifier identificador de la petición\r\n     */\r\n    public reject(identifier: Identifier){\r\n        var url = this.urlBase + \"/reject\";\r\n        var body = identifier;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n    /**\r\n     * Envía una petición al servidor para cancelar una petición\r\n     * @param identifier identificador de la petición\r\n     */\r\n    public cancel(identifier: Identifier){\r\n        var url = this.urlBase + \"/cancel\";\r\n        var body = identifier;\r\n        var headers = new HttpHeaders();\r\n        headers.append('Content-Type', 'application/JSON');\r\n        var resObservable = this.http.put(url, body, { headers: headers });\r\n        return resObservable;\r\n    }\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'custom-primary-button',\r\n    templateUrl: './custom.primary.button.html',\r\n})\r\nexport class CustomPrimaryButtonComponent implements OnInit {\r\n\r\n    @Input() label: String;\r\n    @Input() status: boolean;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n\r\n} ","<p-button [label]=\"label\" [disabled]=\"status\" type=\"submit\"></p-button>\r\n\r\n","import { Component, OnInit, Input } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'custom-input-text',\r\n    templateUrl: './custom.input.text.html',\r\n})\r\nexport class CustomInputTextComponent implements OnInit {\r\n\r\n    @Input() maxlength: Number = 25;\r\n    @Input() controlName: String;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n\r\n} ","<input \r\n    pInputText\r\n    type=\"text\" \r\n/> \r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TokenService } from '../../login/login-files/token.service'\r\nimport { Router } from '@angular/router';\r\nimport { SessionStorageService } from 'angular-web-storage';\r\n\r\n\r\n@Component({\r\n    selector: 'custom-menu-component',\r\n    templateUrl: './custom.menu.component.html',\r\n    styleUrls: ['./custom.menu.component.css', '../../../app.component.css']\r\n})\r\nexport class CustomMenuComponent implements OnInit {\r\n\r\n    public activeLang = 'es';\r\n    public userInSession: Boolean = false;\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private tokenService : TokenService,\r\n        private router: Router,\r\n        private session: SessionStorageService,\r\n    ) \r\n    {\r\n        this.translate.setDefaultLang(this.activeLang);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if(this.session.get(\"investigator\") != null || this.session.get(\"investigator\") != undefined){\r\n            this.userInSession = true;\r\n        }\r\n        else{\r\n            this.userInSession = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Realiza el cambio de lenguaje de la aplicación\r\n     * @param lang Nuevo lenguaje\r\n     */\r\n    public changeLanguaje(lang) {\r\n        this.activeLang = lang;\r\n        this.translate.use(lang);\r\n    }\r\n\r\n    /**\r\n     * Cierra la sesión del usuario\r\n     */\r\n    public logout() {\r\n        this.tokenService.out();\r\n        this.session.clear();\r\n    }\r\n\r\n\r\n\r\n}","<nav class=\"navbar navbar-expand-lg  \" >\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        <img src=\"../../../../assets/img/icon.png\" width=\"45\" height=\"45\" class=\"d-inline-block align-top\" alt=\"Icono aplicación\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"><i class=\"pi pi-bars\" id=\"colapse\" > </i></span>\r\n      </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul class=\"navbar-nav mr-auto\" >\r\n        <li *ngIf=\"userInSession === true\" class=\"nav-item dropdown\">\r\n            <a  class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLinkE\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              {{ 'menu.experiments.title' | translate }}\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" routerLink=\"experiments/register\"id=\"subMenu1\">{{ 'menu.experiments.create' | translate }}</a>\r\n              <a class=\"dropdown-item\" routerLink=\"experiments\"  id=\"subMenu2\">{{ 'menu.experiments.list' | translate }}</a>\r\n            </div>\r\n        </li>\r\n        <li *ngIf=\"userInSession === true\" class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLinkP\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              {{ 'menu.petitions.title' | translate }}\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" routerLink=\"petitions/received\" id=\"subMenu3\">{{ 'menu.petitions.received' | translate }}</a>\r\n              <a class=\"dropdown-item\" routerLink=\"petitions/sent\" id=\"subMenu4\">{{ 'menu.petitions.sent' | translate }}</a>\r\n            </div>\r\n        </li>\r\n      </ul>\r\n      <span class=\"navbar-text\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLinkP\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              <i class=\"pi pi-globe\" > </i> {{ 'menu.languaje.title' | translate }}\r\n            </a>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a class=\"dropdown-item\" id=\"subMenu5\" (click)=\"changeLanguaje('es')\">\r\n                <img src=\"/assets/img/spanish.png\" id=\"spanishFlag\" /> {{ 'menu.languaje.spanish' | translate }}\r\n              </a>\r\n              <a class=\"dropdown-item\" id=\"subMenu6\" (click)=\"changeLanguaje('en')\">\r\n                <img src=\"/assets/img/england.png\" id=\"englandFlag\" /> {{ 'menu.languaje.english' | translate }}\r\n              </a>\r\n            </div>\r\n          </li>\r\n          <li *ngIf=\"userInSession === false\" class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/login\"><i class=\"pi pi-user\" > </i> {{ 'menu.login' | translate }}</a>\r\n          </li>\r\n          <li *ngIf=\"userInSession === false\" class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"investigator/register\"><i class=\"pi pi-user\" > </i> {{ 'menu.register' | translate }}</a>\r\n          </li>\r\n          <li *ngIf=\"userInSession === true\" class=\"nav-item\">\r\n              <a class=\"nav-link\" (click)=\"logout()\" routerLink=\"/login\"><i class=\"pi pi-power-off\" > </i> {{ 'menu.out' | translate }}</a>\r\n          </li>\r\n        </ul>\r\n      </span>\r\n    </div>\r\n  </nav>","export class Identifier {\r\n\r\n    id: number;\r\n\r\n    constructor(id: number){\r\n        this.id = id;\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router} from '@angular/router';\r\nimport { LoginService } from '../components/login/login.service';\r\nimport { SessionStorageService } from 'angular-web-storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuardGuard implements CanActivate {\r\n\r\n  constructor(\r\n      private loginService: LoginService, \r\n      private session: SessionStorageService,\r\n      private  router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.session.get(\"logged\") === true) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}